{"title":"WEB攻防-反序列化","uid":"ac4ec20c26cff8515ee8496cfa9ab5e9","slug":"WEB攻防-反序列化","date":"2024-03-18T13:45:44.000Z","updated":"2024-04-21T10:30:45.807Z","comments":true,"path":"api/articles/WEB攻防-反序列化.json","keywords":null,"cover":[],"content":"<h1 id=\"反序列化\"><a href=\"#反序列化\" class=\"headerlink\" title=\"反序列化\"></a>反序列化</h1><h4 id=\"什么是反序列化\"><a href=\"#什么是反序列化\" class=\"headerlink\" title=\"什么是反序列化\"></a>什么是反序列化</h4><p><em><strong>格式转换</strong></em></p>\n<ul>\n<li>序列化: 对象转换为数组或字符串等格式</li>\n<li>反序列化: 将数组或字符串等格式转换成对象</li>\n</ul>\n<p><img src=\"https://i0.imgs.ovh/2024/03/17/e3gfp.png\" alt=\"e3gfp.png\"></p>\n<h2 id=\"PHP反序列化\"><a href=\"#PHP反序列化\" class=\"headerlink\" title=\"PHP反序列化\"></a>PHP反序列化</h2><h4 id=\"漏洞产生原因\"><a href=\"#漏洞产生原因\" class=\"headerlink\" title=\"漏洞产生原因\"></a>漏洞产生原因</h4><p><em><strong>魔法方法</strong></em></p>\n<ul>\n<li>触发：unserialize函数的变量可控，文件中存在可利用的类，类中有魔术方法</li>\n</ul>\n<div class=\"language-php\"><button title=\"Copy code\" class=\"copy\"></button><span class=\"lang\">php</span><pre class=\"shiki material-theme-palenight\" style=\"background-color: #1a1a1a\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color: #82AAFF\">__construct</span><span style=\"color: #89DDFF\">():</span><span style=\"color: #676E95; font-style: italic\">//构造函数，当对象new的时候会自动调用</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color: #82AAFF\">__destruct</span><span style=\"color: #89DDFF\">():</span><span style=\"color: #676E95; font-style: italic\">//析构函数当对象被销毁时会被自动调用</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color: #82AAFF\">__wakeup</span><span style=\"color: #89DDFF\">():</span><span style=\"color: #676E95; font-style: italic\">//unserialize()时会被自动调用</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color: #82AAFF\">__invoke</span><span style=\"color: #89DDFF\">():</span><span style=\"color: #BABED8\"> </span><span style=\"color: #676E95; font-style: italic\">//当尝试以调用函数的方法调用一个对象时，会被自动调用</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color: #82AAFF\">__call</span><span style=\"color: #89DDFF\">():</span><span style=\"color: #BABED8\"> </span><span style=\"color: #676E95; font-style: italic\">//在对象上下文中调用不可访问的方法时触发</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color: #82AAFF\">__callStatci</span><span style=\"color: #89DDFF\">():</span><span style=\"color: #BABED8\"> </span><span style=\"color: #676E95; font-style: italic\">//在静态上下文中调用不可访问的方法时触发</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color: #82AAFF\">__get</span><span style=\"color: #89DDFF\">():</span><span style=\"color: #BABED8\"> </span><span style=\"color: #676E95; font-style: italic\">//用于从不可访问的属性读取数据</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color: #82AAFF\">__set</span><span style=\"color: #89DDFF\">():</span><span style=\"color: #BABED8\"> </span><span style=\"color: #676E95; font-style: italic\">//用于将数据写入不可访问的属性</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color: #82AAFF\">__isset</span><span style=\"color: #89DDFF\">():</span><span style=\"color: #BABED8\"> </span><span style=\"color: #676E95; font-style: italic\">//在不可访问的属性上调用isset()或empty()触发</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color: #82AAFF\">__unset</span><span style=\"color: #89DDFF\">():</span><span style=\"color: #BABED8\"> </span><span style=\"color: #676E95; font-style: italic\">//在不可访问的属性上使用unset()时触发</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color: #82AAFF\">__toString</span><span style=\"color: #89DDFF\">():</span><span style=\"color: #BABED8\"> </span><span style=\"color: #676E95; font-style: italic\">//把类当作字符串使用时触发</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color: #82AAFF\">__sleep</span><span style=\"color: #89DDFF\">():</span><span style=\"color: #BABED8\"> </span><span style=\"color: #676E95; font-style: italic\">//serialize()函数会检查类中是否存在一个魔术方法__sleep() 如果存在，该方法会被优先调用</span></span></code></pre></div><ul>\n<li>演示:</li>\n</ul>\n<div class=\"language-php\"><button title=\"Copy code\" class=\"copy\"></button><span class=\"lang\">php</span><pre class=\"shiki material-theme-palenight\" style=\"background-color: #1a1a1a\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color: #89DDFF\">&lt;?</span><span style=\"color: #BABED8\">php</span></span>\n<span class=\"line\"><span style=\"color: #676E95; font-style: italic\">//序列化&amp;反序列化</span></span>\n<span class=\"line\"><span style=\"color: #C792EA\">class</span><span style=\"color: #BABED8\"> </span><span style=\"color: #FFCB6B\">demotest</span><span style=\"color: #89DDFF\">&#123;</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">    </span><span style=\"color: #C792EA\">public</span><span style=\"color: #BABED8\"> </span><span style=\"color: #89DDFF\">$</span><span style=\"color: #BABED8\">name</span><span style=\"color: #89DDFF\">=</span><span style=\"color: #89DDFF\">&#39;</span><span style=\"color: #C3E88D\">xiaodi</span><span style=\"color: #89DDFF\">&#39;</span><span style=\"color: #89DDFF\">;</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">    </span><span style=\"color: #C792EA\">public</span><span style=\"color: #BABED8\"> </span><span style=\"color: #89DDFF\">$</span><span style=\"color: #BABED8\">sex</span><span style=\"color: #89DDFF\">=</span><span style=\"color: #89DDFF\">&#39;</span><span style=\"color: #C3E88D\">man</span><span style=\"color: #89DDFF\">&#39;</span><span style=\"color: #89DDFF\">;</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">    </span><span style=\"color: #C792EA\">public</span><span style=\"color: #BABED8\"> </span><span style=\"color: #89DDFF\">$</span><span style=\"color: #BABED8\">age</span><span style=\"color: #89DDFF\">=</span><span style=\"color: #89DDFF\">&#39;</span><span style=\"color: #C3E88D\">29</span><span style=\"color: #89DDFF\">&#39;</span><span style=\"color: #89DDFF\">;</span></span>\n<span class=\"line\"><span style=\"color: #89DDFF\">&#125;</span></span>\n<span class=\"line\"><span style=\"color: #89DDFF\">$</span><span style=\"color: #BABED8\">example</span><span style=\"color: #89DDFF\">=</span><span style=\"color: #F78C6C\">new</span><span style=\"color: #BABED8\"> </span><span style=\"color: #FFCB6B\">demotest</span><span style=\"color: #89DDFF\">();</span></span>\n<span class=\"line\"><span style=\"color: #89DDFF\">$</span><span style=\"color: #BABED8\">s</span><span style=\"color: #89DDFF\">=</span><span style=\"color: #82AAFF\">serialize</span><span style=\"color: #89DDFF\">($</span><span style=\"color: #BABED8\">example</span><span style=\"color: #89DDFF\">);</span><span style=\"color: #676E95; font-style: italic\">//序列化-&gt;O:8:&quot;demotest&quot;:3:&#123;s:4:&quot;name&quot;;s:6:&quot;xiaodi&quot;;s:3:&quot;sex&quot;;s:3:&quot;man&quot;;s:3:&quot;age&quot;;s:2:&quot;29&quot;;&#125;</span></span>\n<span class=\"line\"><span style=\"color: #89DDFF\">$</span><span style=\"color: #BABED8\">u</span><span style=\"color: #89DDFF\">=</span><span style=\"color: #82AAFF\">unserialize</span><span style=\"color: #89DDFF\">($</span><span style=\"color: #BABED8\">s</span><span style=\"color: #89DDFF\">);</span><span style=\"color: #676E95; font-style: italic\">//反序列化-&gt;object(demotest)#2 (3) &#123; [&quot;name&quot;]=&gt; string(6) &quot;xiaodi&quot; [&quot;sex&quot;]=&gt; string(3) &quot;man&quot; [&quot;age&quot;]=&gt; string(2) &quot;29&quot; &#125;</span></span>\n<span class=\"line\"><span style=\"color: #82AAFF\">echo</span><span style=\"color: #BABED8\"> </span><span style=\"color: #89DDFF\">$</span><span style=\"color: #BABED8\">s</span><span style=\"color: #89DDFF\">.&#39;</span><span style=\"color: #C3E88D\">&lt;br&gt;</span><span style=\"color: #89DDFF\">&#39;</span><span style=\"color: #89DDFF\">;</span></span>\n<span class=\"line\"><span style=\"color: #82AAFF\">var_dump</span><span style=\"color: #89DDFF\">($</span><span style=\"color: #BABED8\">u</span><span style=\"color: #89DDFF\">);</span></span>\n<span class=\"line\"><span style=\"color: #82AAFF\">echo</span><span style=\"color: #BABED8\"> </span><span style=\"color: #89DDFF\">&#39;</span><span style=\"color: #C3E88D\">&lt;br&gt;</span><span style=\"color: #89DDFF\">&#39;</span><span style=\"color: #89DDFF\">;</span></span>\n<span class=\"line\"><span style=\"color: #89DDFF\">?&gt;</span></span></code></pre></div><p>创建对象即可触发<code>__construct</code>魔术方法，销毁对象触发<code>__destruct</code>，把类当作字符串使用时触发<code>__toString()</code></p>\n<h4 id=\"原生类\"><a href=\"#原生类\" class=\"headerlink\" title=\"原生类\"></a>原生类</h4><p><a href=\"https://www.anquanke.com/post/id/264823\">浅析PHP原生类-安全客 - 安全资讯平台 (anquanke.com)</a></p>\n<h4 id=\"漏洞示例\"><a href=\"#漏洞示例\" class=\"headerlink\" title=\"漏洞示例\"></a>漏洞示例</h4><h5 id=\"wakeup-方法绕过\"><a href=\"#wakeup-方法绕过\" class=\"headerlink\" title=\"__wakeup()方法绕过\"></a>__wakeup()方法绕过</h5><ul>\n<li><p>如果存在wakeup方法，调用unserilize()方法前则先调用wakeup方法</p>\n</li>\n<li><p>但是序列化字符串中<strong>表示对象属性个数的值大于真实的属性个数</strong>时会**跳过__wakeup()**的执行</p>\n</li>\n</ul>\n<div class=\"language-txt\"><button title=\"Copy code\" class=\"copy\"></button><span class=\"lang\">txt</span><pre class=\"shiki material-theme-palenight\" style=\"background-color: #1a1a1a\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color: #babed8\">O:4:&quot;Name&quot;:2:&#123;s:14:&quot;Nameusername&quot;;s:5:&quot;admin&quot;;s:14:&quot;Namepassword&quot;;s:3:&quot;100&quot;;&#125;</span></span>\n<span class=\"line\"><span style=\"color: #babed8\">//修改为</span></span>\n<span class=\"line\"><span style=\"color: #babed8\">O:4:&quot;Name&quot;:3:&#123;s:14:&quot;Nameusername&quot;;s:5:&quot;admin&quot;;s:14:&quot;Namepassword&quot;;s:3:&quot;100&quot;;&#125;</span></span>\n<span class=\"line\"><span style=\"color: #babed8\"></span></span></code></pre></div><h2 id=\"JAVA反序列化\"><a href=\"#JAVA反序列化\" class=\"headerlink\" title=\"JAVA反序列化\"></a>JAVA反序列化</h2><h4 id=\"原理\"><a href=\"#原理\" class=\"headerlink\" title=\"原理\"></a>原理</h4><ul>\n<li>序列化: Java对象 –&gt; 字节序列</li>\n<li>反序列化: 字节序列 –&gt; Java对象</li>\n</ul>\n<h4 id=\"利用\"><a href=\"#利用\" class=\"headerlink\" title=\"利用\"></a>利用</h4><h5 id=\"Ysoserial\"><a href=\"#Ysoserial\" class=\"headerlink\" title=\"Ysoserial\"></a>Ysoserial</h5><ul>\n<li><p><a href=\"https://github.com/frohoff/ysoserial\">frohoff&#x2F;ysoserial: A proof-of-concept tool for generating payloads that exploit unsafe Java object deserialization. (github.com)</a></p>\n</li>\n<li><p><a href=\"https://blog.csdn.net/weixin_46684578/article/details/128499673\">【Web安全】Ysoserial 简单利用-CSDN博客</a></p>\n</li>\n</ul>\n","text":"反序列化什么是反序列化格式转换 序列化: 对象转换为数组或字符串等格式 反序列化: 将数组或字符串等格式转换成对象 PHP反序列化漏洞产生原因魔法方法 触发：u...","permalink":"/post/WEB攻防-反序列化","photos":[],"count_time":{"symbolsCount":"2k","symbolsTime":"2 mins."},"categories":[],"tags":[],"toc":"<ol class=\"toc\"><li class=\"toc-item toc-level-1\"><a class=\"toc-link\" href=\"#%E5%8F%8D%E5%BA%8F%E5%88%97%E5%8C%96\"><span class=\"toc-text\">反序列化</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#%E4%BB%80%E4%B9%88%E6%98%AF%E5%8F%8D%E5%BA%8F%E5%88%97%E5%8C%96\"><span class=\"toc-text\">什么是反序列化</span></a></li></ol></li></ol></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#PHP%E5%8F%8D%E5%BA%8F%E5%88%97%E5%8C%96\"><span class=\"toc-text\">PHP反序列化</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#%E6%BC%8F%E6%B4%9E%E4%BA%A7%E7%94%9F%E5%8E%9F%E5%9B%A0\"><span class=\"toc-text\">漏洞产生原因</span></a></li><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#%E5%8E%9F%E7%94%9F%E7%B1%BB\"><span class=\"toc-text\">原生类</span></a></li><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#%E6%BC%8F%E6%B4%9E%E7%A4%BA%E4%BE%8B\"><span class=\"toc-text\">漏洞示例</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-5\"><a class=\"toc-link\" href=\"#wakeup-%E6%96%B9%E6%B3%95%E7%BB%95%E8%BF%87\"><span class=\"toc-text\">__wakeup()方法绕过</span></a></li></ol></li></ol></li></ol></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#JAVA%E5%8F%8D%E5%BA%8F%E5%88%97%E5%8C%96\"><span class=\"toc-text\">JAVA反序列化</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#%E5%8E%9F%E7%90%86\"><span class=\"toc-text\">原理</span></a></li><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#%E5%88%A9%E7%94%A8\"><span class=\"toc-text\">利用</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-5\"><a class=\"toc-link\" href=\"#Ysoserial\"><span class=\"toc-text\">Ysoserial</span></a></li></ol></li></ol></li></ol></li></ol></li></ol>","author":{"name":"Myprefer","slug":"blog-author","avatar":"https://gravatar.com/avatar/d195051819ce742212020a79d768fb6c?size=256&cache=1710768150791","link":"https://github.com/Myprefer","description":"web security learner, ML learner","socials":{"github":"","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}},"mapped":true,"hidden":false,"prev_post":{"title":"(转)渗透测试-基本流程","uid":"8b9aeb65c936050fec0fc9c20edbf39b","slug":"转-渗透测试-基本流程","date":"2024-03-21T14:50:33.000Z","updated":"2024-03-21T14:51:34.220Z","comments":true,"path":"api/articles/转-渗透测试-基本流程.json","keywords":null,"cover":null,"text":"一般来说，渗透测试的基本流程如下： 确定目标 信息收集 漏洞探测 漏洞利用getshell 内网转发 内网渗透 痕迹清除 撰写渗透测试报告 一 确定目标这个没什...","permalink":"/post/转-渗透测试-基本流程","photos":[],"count_time":{"symbolsCount":"6.9k","symbolsTime":"6 mins."},"categories":[],"tags":[],"author":{"name":"Myprefer","slug":"blog-author","avatar":"https://gravatar.com/avatar/d195051819ce742212020a79d768fb6c?size=256&cache=1710768150791","link":"https://github.com/Myprefer","description":"web security learner, ML learner","socials":{"github":"","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}}},"next_post":{"title":"WEB攻防-通用漏洞","uid":"11932efbcdc3039b003ba34e280dee13","slug":"WEB攻防-通用漏洞","date":"2024-03-05T15:07:08.000Z","updated":"2024-04-21T12:31:45.059Z","comments":true,"path":"api/articles/WEB攻防-通用漏洞.json","keywords":null,"cover":null,"text":"WEB攻防-通用漏洞大型靶场Vulhub - Docker-Compose file for vulnerability environment SQL注入-补...","permalink":"/post/WEB攻防-通用漏洞","photos":[],"count_time":{"symbolsCount":"13k","symbolsTime":"12 mins."},"categories":[],"tags":[],"author":{"name":"Myprefer","slug":"blog-author","avatar":"https://gravatar.com/avatar/d195051819ce742212020a79d768fb6c?size=256&cache=1710768150791","link":"https://github.com/Myprefer","description":"web security learner, ML learner","socials":{"github":"","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}}}}